#+title: SSH Configuration
#+description:
#+startup: content
#+property: header-args        :tangle-mode (identity #o400) :mkdirp yes
#+property: header-args:conf   :tangle-mode (identity #o400) :mkdirp yes
#+property: header-args:sh     :tangle-mode (identity #o500) :mkdirp yes
#+property: header-args:bash   :tangle-mode (identity #o500) :mkdirp yes
#+property: header-args:scheme :tangle-mode (identity #o500) :mkdirp yes :comments link
#+options: toc:nil

* SSH Config

+ the env variable =${SSH_CONFIG_HOME}= can be used if exported

** Refs

- [[https://github.com/drduh/config/blob/master/ssh_config][drduh/config]] (ssh_config)

** Ideas

**** TODO consider reorganizing the folder structure:

Use a maven-like tld.blah.server basis for the folder structure, so
that =Match= and =Host= directives in the top-level config can make
references to subdirectories (that either exist ... or not).

+ for now, the directories are user-based, so that the structure can
  be modularly squirreled away for users like =root= while everything
  is kept in =$SECRETS_HOME=

** Process

Forget =${SSH_CONFIG_HOME}=. Either prepend all =ssh/agent= commands
with =HOME=$SECRETS_HOME= or swap the existing =~/.ssh= with a link.

#+begin_src shell :eval no
ln -s $SECRETS_HOME ~/.ssh
#+end_src

** Notes

Wow, so attempting to destructure my ssh config has been confusing as
hell.

*** Portability (TLDR)

To make the configs portable, I need a link from =~/.ssh= to
=${SSH_CONFIG_HOME}=. Includes can't use =${SSH_CONFIG_HOME}=, but
IdentityFile can.

GPG Agent may handle this differently, since it uses keygrips.

*** Dealing with =ssh_config= path expansion

+ This is a problem when delegating some behavior via =ssh-agent= or
  =gpg-agent= ...
  - but i really don't want to have to put keys on disks
    that I don't trust.
  - Once a file is on a disk, it can't be erased even
    if you =rm= it.

Links are inconvenient, since a computer will often have a =~/.ssh=
directory. This will need to be (re)moved.

*** KnownHosts

+ ssh uses tilde, not =HOME= 

*** IdentityFile

+ Does not resolve relative paths like =Include=
  - instead, it expects these to be relative to =pwd=
+ If =HOME= variable is set, ssh_config still expands tilde to the
  user's home directory. 

*** Include

+ Cannot expand =${SSH_CONFIG_HOME}= directives
+ Can follow Match or Host directives
+ Relative paths will always be relative to:
  - =~/.ssh/=
  - =/etc/ssh/=
  - changing =HOME= has no effect
+ May end up included in an Host directive if at end of file
  - instead add after a =Match all=
+ Does not permit any =%.= expansion

** Defaults

E.G. Host

#+begin_example conf
Host router
  IdentityFile router
  HostName 192.168.1.1
  Port 2222
  User sysadm
  ControlMaster auto
  ControlPath ~/.ssh/master-%r@%h:%p
  ControlPersist 300
#+end_example

#+begin_src conf :tangle ./.ssh/config.defaults

# For now
IdentitiesOnly Yes

Host gitlab.com
  User git
  ControlMaster no
  IdentitiesOnly yes
  IdentityFile gitlab
Host github.com
  User git
  ControlMaster no
  IdentitiesOnly yes
  IdentityFile github
  MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com
#+end_src

#+begin_src conf :tangle ./.ssh/config.any.defaults
Host *
  #ControlMaster auto
  #ControlPath ~/.ssh/master-%r@%h:%p
  #ControlPersist 300
  #AddKeysToAgent yes
  AddressFamily inet
  HashKnownHosts yes
  VisualHostKey yes
  PasswordAuthentication no
  ChallengeResponseAuthentication no
  StrictHostKeyChecking ask
  VerifyHostKeyDNS yes
  ForwardAgent no
  ForwardX11 no
  ForwardX11Trusted no
  ServerAliveInterval 300
  ServerAliveCountMax 2
  Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com
  MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com
  KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256
  HostKeyAlgorithms ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa

#+end_src

* SSH Daemon

#+begin_src conf :tangle .ssh/daemon.defaults
# https://github.com/drduh/config/blob/master/sshd_config
# https://linux.die.net/man/5/sshd_config
Port 22
AddressFamily inet
#ListenAddress 172.16.1.1
#ListenAddress 10.8.1.1
ListenAddress 0.0.0.0
HostKey /etc/ssh/ssh_host_key
HostKey /etc/ssh/ssh_host_rsa_key
AllowUsers sysadm
Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com
MACs hmac-sha2-512-etm@openssh.com
KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256
HostKeyAlgorithms ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa
RekeyLimit 256M 1H
SyslogFacility AUTH
LogLevel VERBOSE
LoginGraceTime 10s
MaxStartups 1
MaxSessions 2
MaxAuthTries 3
ClientAliveInterval 30
ClientAliveCountMax 20
PermitRootLogin no
StrictModes yes
PubkeyAuthentication yes
AuthorizedKeysFile %h/.ssh/authorized_keys
IgnoreRhosts yes
PasswordAuthentication no
PermitEmptyPasswords no
HostbasedAuthentication no
ChallengeResponseAuthentication no
Compression delayed
AllowTcpForwarding no
X11Forwarding no
GatewayPorts no
PermitTunnel no
TCPKeepAlive yes
UseDNS no
PrintMotd no
PrintLastLog yes
PermitUserEnvironment no
#Subsystem sftp  /usr/lib/sftp-server
#Subsystem sftp  /usr/libexec/sftp-server
#TrustedUserCAKeys /etc/ssh/ca.pub
#Match User proxy
#       AllowTcpForwarding yes
#+end_src

* SSH Agent

** PKCS #11

*** Specifying a link to the PKCS#11 lib

The =ssh-agent= expects libs to be one of two default locations, but both this and =ssh-add= will resolve links that are passed, so they must be exact.

On Guix, this requires setting up =ssh-agent= to point to the exact =opensc-pkcs11.so= with =ssh-agent -P $(readlink $PKCS_LIB)=. When tracing problems, then run as foreground daemon with =-d=.

Then card-keys should now add when running =ssh-add -s "$(readlink $PKCS_LIB)"=

Because ssh will use a similar interface that resolves links,
then adding =PCKS11Provider /run/current-system/profile/lib/opensc-pkcs11.so= to
the =ssh_config= will reach the correct bin from a link. No need to update the config (phew!).

For this specific link to work, the =opensc= package must be installed to the
Guix /system/.

*** TODO a manifest to install all dependencies on USB
*** TODO an init script for SSH and an update script for the USB
*** TODO passing args to the =opensc= shared lib

I'm not sure how to prevent the card from trying all the PIV keys
