#!/usr/bin/env bash
# maybe: !/usr/bin/env bash

MODBITS=(1 4 8 16 32 64)
# Value for -M must match a valid mask: ${MODBITS[@]}
# nevermind... i'd rather have the caller loop the results
# M|+M) matchmasks=$OPTARG ;;

# for i in $(hjbinds --list-mods); do
#   if (( 32 & $i != 0 )); then echo $i; fi;
# done | tr '\n' ' '
#
# => 32 33 36 37 40 41 44 45 96 97 100 101 104 105 108 109

MODMASKS=(0 1 4 5 8 9 12 13 16 17 20 21 24 25 28 29 32 33 36 37 40 41 44 45 64 65 68 69 72 73 76 77 80 81 84 85 88 89 92 93 96 97 100 101 104 105 108 109)

MODHELP="
modmasks:

             shift:
             0  1        ctrl:
                         4  5         alt:
                                      8   9   12  13
    altgr:   16 17
                         20  21
                                      24  25  28  29
    lvl5:    32 33
                         36 37
                                      40  41  44  45
    super:   64 65
                         68 69
                                      72  73  76  77
      A-s:   80 81
                         84 85
                                      88  89  92  93
    A-H-s:   96 97
                        100 101
                                      104 105 108 109
"

[[ "$1" == "--list-mods" ]] && echo "${MODMASKS[@]}" && exit 0

select=""
while getopts :lroenmd OPT; do
    case $OPT in
        l|+l) select+=".locked and " ;;
        r|+r) select+=".release and " ;;
        # c|+c) select+=".click" ;;
        # g|+g) select+=".drag" ;;
        o|+o) select+=".longPress and " ;;
        e|+e) select+=".repeat and " ;;
        n|+n) select+=".non_consuming and " ;;
        m|+m) select+=".mouse and " ;;
        d|+d) select+=".has_description and " ;;
        *)
            echo "usage: `basename $0` [+-lroenmd} [--] modmask...

${MODHELP[@]}
"
            exit 2
    esac
done
shift `expr $OPTIND - 1`
OPTIND=1

[[ $# -lt 1 ]] && echo "requires modmask" && exit 1;

modmask=""
for m in ${MODMASKS[@]}; do
    if [[ "$1" == "$m" ]]; then
        modmask="$1";
    fi
done

[[ -z "$modmask" ]] && echo "a valid modmask is required" && exit 1;

set -o pipefail # ... outside of shell?
hyprctl binds -j | jq '. | map(select('"$select .modmask == $modmask"'))'

# | select(.submap == "" and .modmask == 0) '
