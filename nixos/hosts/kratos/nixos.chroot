#!/bin/sh
db=/dev/nvme0n1p1;              mb=/mnt/boot
dr=/dev/mapper/vgcrypt-root;    mr=/mnt
dh=/dev/mapper/vgcrypt-home;    mh=/mnt/home
dd=/dev/mapper/vgcrypt-data;    md=/mnt/data
# df=/dev/mapper/vgcrypt-flatpak; mf=/mnt/flatpak
ds=/dev/mapper/vgcrypt-steam;   ms=/mnt/steam;   # ms=/mnt/flatpak/steam
dv=/dev/mapper/vgcrypt-vm;      mv=/mnt/data/vm

# maybe this is why Garuda couldn't boot with the original systemd-boot
# ..... i've run into this like twice before.
THE_PARTUUID=8691357d-bb80-2a47-8923-914370fc3e26

ruuid=415478b1-89ab-4851-96c5-9a9bc0ebbceb
huuid=9cedc0b0-344f-476c-bae1-20b7993b1a6d
suuid=59707d1b-d5a6-481f-8d4e-422fc3afa11c
duuid=616d45d0-155e-47bd-96be-1ec0b92401bc
vuuid=4a7e3836-2a8b-4eab-a01a-b596acce77cc
# guuid=0dd0a765-8b3d-4469-847c-30d930848a48

bops=defaults,noatime,compress=zstd
bn=/mnt/nix       # @nix
bg=/mnt/gnu       # @gnu
bv=/mnt/var       # @var
bl=/mnt/var/log   # @log
bt=/mnt/var/tmp   # @tmp
bc=/mnt/var/cache # @cache

# NOTE: if the subvolume needs to stem from subvolid=5 (subvol=/)
# you cannot create these mountpoints after mounting subvol=/@
# without shutting down the live system...

sudo mount -o subvol=/@,$bops UUID=$ruuid $mr
sudo mount -o subvol=/@nix,defaults,noatime UUID=$ruuid $bn
sudo mount -o subvol=/@var,$bops UUID=$ruuid $bv

# create mountpoints after /mnt/var
# mkdir -p /mnt/var/{log,tmp,cache}
sudo mount -o subvol=/@log,$bops UUID=$ruuid $bl
sudo mount -o subvol=/@tmp,$bops UUID=$ruuid $bt
sudo mount -o subvol=/@cache,$bops UUID=$ruuid $bc

sudo mount -o $bops UUID=$huuid $mh
# mkdir -p $md $ms $mv
sudo mount UUID=$duuid $md
sudo mount UUID=$suuid $ms
sudo mount UUID=$vuuid $mv

# mount /boot
# mkdir $mb
sudo mount $db $mb
