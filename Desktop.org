:PROPERTIES:
:ID:       b03d47fc-e81c-409f-bf95-0d973930e73f
:END:
#+TITLE: Guix Desktop
#+PROPERTY: header-args :mkdirp yes
#+PROPERTY: header-args:sh     :tangle-mode (identity #o555) :mkdirp yes
#+PROPERTY: header-args:conf   :tangle-mode (identity #o444) :mkdirp yes
#+property: header-args:scheme :tangle-mode (identity #o644) :mkdirp yes :comments link
#+OPTIONS: toc:nil

* Table of Contents :TOC_3_gh:
- [[#system-settings][System Settings]]
  - [[#disk-mounting][Disk Mounting]]
  - [[#scheduled-tasks][Scheduled Tasks]]
  - [[#user-services][User Services]]
- [[#fonts][Fonts]]
- [[#themes][Themes]]
  - [[#xsettings][XSettings]]
  - [[#color-schemes][Color Schemes]]
- [[#input][Input]]
  - [[#fcitx5][FCITX5]]
- [[#window-management][Window Management]]
  - [[#i3][i3]]
    - [[#setup-xidlehook-to-notify-send-when-idletime-is-about-to-lock-the-computer][setup =xidlehook= to notify-send when idletime is about to lock the computer]]
- [[#panel][Panel]]
  - [[#polybar][Polybar]]
- [[#notifications][Notifications]]
  - [[#dunst][Dunst]]
    - [[#dunst-notes][Dunst Notes]]
- [[#launchers][Launchers]]
- [[#display-management][Display Management]]
- [[#xdg][XDG]]
  - [[#desktop-entries][Desktop Entries]]
  - [[#restrict-autostart-entries][Restrict Autostart entries]]
  - [[#mime-handlers][MIME Handlers]]
    - [[#mime-types-fntecosaur][Mime types [fn:tecosaur]]]
- [[#applications][Applications]]
  - [[#browsers][Browsers]]
    - [[#nyxt][Nyxt]]
    - [[#qutebrowser][Qutebrowser]]
  - [[#chat][Chat]]
  - [[#file-managers][File Managers]]
  - [[#terminals][Terminals]]
  - [[#password-management][Password Management]]
  - [[#audio-device-control][Audio Device Control]]
  - [[#media-players][Media Players]]
    - [[#mpv][mpv]]
    - [[#codecs-and-drivers][Codecs and Drivers]]
  - [[#image-viewers-and-editors][Image Viewers and Editors]]
  - [[#document-readers][Document Readers]]
  - [[#syncthing][Syncthing]]
  - [[#flatpak][Flatpak]]
    - [[#fontconfig-fix][Fontconfig fix]]
  - [[#printing][Printing]]
  - [[#system][System]]
- [[#desktop-profiles][Desktop Profiles]]
  - [[#desktop-profile][Desktop Profile]]
  - [[#desktop-bin-profile][Desktop Bin Profile]]
  - [[#i3-profile][i3 Profile]]
  - [[#browsers-1][Browsers]]
- [[#notes][Notes]]
  - [[#bluetooth-setup][Bluetooth Setup]]
- [[#footnotes][Footnotes]]

* System Settings

#+NAME: system-settings
#+begin_src emacs-lisp :session system-settings
(load-file ".emacs.d/per-system-settings.el")
#+end_src

#+NAME: get-setting
#+begin_src emacs-lisp :var name="nil" :session system-settings
(dw/system-settings-get (intern name))
#+end_src
  
** Disk Mounting

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
"udiskie"
#+end_src

** Scheduled Tasks

Mcron definitions go in [[file:.config/cron][.config/cron]]. For mcron usage, see the info pages. This
doesn't include all definitions.

** User Services

These are defined in [[file:.config/shepherd/init.d][.config/shepherd/init.d]] and loaded in [[.config/shepherd/init.scm][.config/shepherd/init.scm]].

* Fonts

*Guix Packages"

#+begin_src scheme :noweb-ref packages :noweb-sep ""

  ;; Settings Manager
  "xsettingsd"

  ;; GTK Themes
  "arc-icon-theme"
  "matcha-theme"
  "hicolor-icon-theme"
  "gnome-icon-theme"
  "gnome-backgrounds"
  "papirus-icon-theme"
  "breeze-icons"

  ;; Fonts
  "font-fira-code"
  "font-jetbrains-mono"
  "font-iosevka"
  "font-iosevka-aile"
  "font-abattis-cantarell"
  "font-dejavu"
  "font-google-noto"
  "font-gnu-freefont"
  "font-liberation"
  "font-awesome"
  "font-google-material-design-icons"
  "font-ghostscript"
  "font-bitstream-vera"

  ;; japanese (CJK)
  "font-adobe-source-han-sans"
  "font-wqy-zenhei"

  ;; more fonts
  "font-juliamono"

  "font-adobe-source-han-sans"

#+end_src

*.config/fontconfig/fonts.conf*

This needs to be copied after deploy. It needs to be modified if not running on a guix system.

#+begin_src xml :tangle .config/fontconfig/fonts.conf.eg
<?xml version="1.0"?>
<!DOCTYPE fontconfig SYSTEM "fonts.dtd">
<fontconfig>
  <include ignore_missing="yes">/etc/fonts/fonts.conf</include>

  <dir>/home/dc/.dotfiles/fonts</dir>
  <dir>/home/dc/.guix-extra-profiles/desktop/desktop/share/fonts</dir>
  <alias>
    <family>Apple Color Emoji</family>
    <prefer>
      <family>Noto Color Emoji</family>
    </prefer>
  </alias>
</fontconfig>
#+end_src

* Themes

** XSettings

*.config/xsettingsd/xsettingsd.conf:*

#+begin_src conf :tangle .config/xsettingsd/xsettingsd.conf :noweb yes :comments none
Net/ThemeName "Matcha-dark-azul"
Net/IconThemeName "Papirus-Dark"
Gtk/ToolbarStyle 3  
Gtk/EnableAnimations 1  
Gtk/DecorationLayout "menu:minimize,maximize,close"
Gtk/FontName "Cantarell 11"
Gtk/MonospaceFontName "Fira Mono 10"
Gtk/CursorThemeName "Adwaita"
Gtk/PrimaryButtonWarpsSlider 0
Gtk/MenuImages 1
Gtk/ButtonImages 1
Xft/Antialias 1
Xft/Hinting 0
Xft/HintStyle "hintnone"
<<dpi()>> # 1024 * DPI
#+end_src

Misc settings from Garuda's KDE theme

#+begin_example conf
Net/IconThemeName "BeautyLine"
Gtk/FontName "Fira Sans,  10"
Gtk/CursorThemeSize 24
Gtk/CursorThemeName "Sweet-cursors"
#+end_example

*DPI*

#+NAME: dpi
#+begin_src emacs-lisp :session=system-settings :var settings=system-settings
(or (and (alist-get 'desktop/dpi dw/system-settings)
     (concat "Xft/DPI "
             (number-to-string (* 1024 (alist-get 'desktop/dpi dw/system-settings)))))
    "")
#+end_src

** Color Schemes

* Input

** FCITX5

#+*Guix Packages"

#+begin_src scheme :tangle .config/guix/manifests/fcitx5.scm
(specifications->manifest
 '(
   "fcitx5"
   "anthy"
   "fcitx5-anthy"
   "fcitx5-configtool"
   "fcitx5-chinese-addons"
   "fcitx5-material-color-theme"
   "fcitx5-gtk3"
   "fcitx5-qt"
   ))
#+end_src

#+RESULTS:

* Window Management

+ example configs:
  + [[file:/data/ecto/x.files/benmezger/dotfiles/dot_config/i3/config::bindsym Return mode "default"][benmezger]]

** i3


*Guix Packages*

#+begin_src scheme :noweb-ref i3packages :noweb-sep ""

"i3-gaps"
"i3status"
"i3lock"
"j4-dmenu-desktop"

#+end_src

i3 shim for guix

#+begin_src conf :tangle .config/i3/guix.shim :noweb yes :comments none
set $preferredTerminalEmulator /usr/bin/alacritty
set $preferredBrowser /usr/bin/firefox
set $preferredFileManager /usr/bin/thunar
set $preferredMailClient /usr/bin/geary
set $preferredTextEditor /usr/bin/emacsclient -c
set $preferredScreenCaptureTool /usr/bin/flameshot gui

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Serif Mono 12  
#+end_src

i3 shim for Garuda

#+begin_src conf :tangle .config/i3/garuda.shim :noweb yes :comments none
set $preferredTerminalEmulator /usr/bin/alacritty
set $preferredBrowser /usr/bin/firefox
set $preferredFileManager /usr/bin/thunar
set $preferredMailClient /usr/bin/geary
set $preferredTextEditor /usr/bin/emacsclient -c
set $preferredScreenCaptureTool /usr/bin/flameshot gui

font pango: source code pro 10

# start dmenu (a program launcher)
bindsym $super+Shift+d exec i3-dmenu-desktop --dmenu="dmenu -i -fn 'Noto Sans:size=20'"

bindsym $super+t exec xfce4-terminal

# Lock screen
bindsym $super+l exec i3lock -i $lockScreenWallpaper

exec --no-startup-id ~/.fehbg
# exec --no-startup-id xsettingsd &
#exec --no-startup-id pasystray
exec --no-startup-id conky
exec --no-startup-id conky -c ~/.config/conky/conky-shcts
# exec --no-startup-id copyq
# exec --no-startup-id dunst
exec --no-startup-id dex -a -s /etc/xdg/autostart/:~/.config/autostart/
exec --no-startup-id redshift
exec --no-startup-id desktop-items
exec --no-startup-id pamac-tray
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id xfce4-power-manager
exec_always --no-startup-id ff-theme-util
exec_always --no-startup-id setcursor
#exec_always --no-startup-id ${HOME}/.config/polybar/launch.sh
exec_always --no-startup-id numlockx on
exec blueberry-tray
exec --no-startup-id java -Xmx1024m -jar "/opt/xdman/xdman.jar" -m

exec --no-startup-id pamac-tray
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

exec --no-startup-id redshift
exec --no-startup-id desktop-items

# # ===========
# # TODO: move to a script for manjaro/nonguix systems
# # ===========

# # an xfce file manager (lighter than thunar)
# # NOTE: manjaro:
# bindsym $super+F3 exec pcmanfm
# exec --no-startup-id xautolock -time 10 -locker blurlock
# bindsym $super+q exec --no-startup-id blurlock

# # NOTE: fedora
# # bindsym $super+q exec "loginctl lock-session"

# # autostart tools (most of these end up in the tray)
# # in fedora:  
# # exec --no-startup-id /usr/libexec/polkit-gnome-authentication-agent-1
# exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# exec --no-startup-id nitrogen --restore; sleep 1; picom -b
# exec --no-startup-id xfce4-power-manager
# exec --no-startup-id blueman-applet

# # ===== manjaro specific =====
# # exec --no-startup-id manjaro-hello
# exec --no-startup-id pamac-tray
# exec --no-startup-id clipit
# exec_always --no-startup-id sbxkb
# exec --no-startup-id start_conky_maia
# exec --no-startup-id start_conky_green
# exec_always --no-startup-id ff-theme-util
# exec_always --no-startup-id fix_xcursor

#+end_src

The main i3 config

#+begin_src conf :tangle .config/i3/config :noweb yes :comments none
set $super Mod4
set $alt Mod1

set $rofi-theme <<get-setting(name="rofi/theme")>>
set $rofi-icons <<get-setting(name="rofi/icons")>>
set $rofi-drun-theme <<get-setting(name="rofi/drun-theme")>>
set $rofi-drun-icons <<get-setting(name="rofi/drun-icons")>>
set $rofi-file-theme <<get-setting(name="rofi/file-theme")>>
set $rofi-file-icons <<get-setting(name="rofi/file-icons")>>

### Wallpaper: ###
# - You need to specify homescreen wallpaper using azote

set $lockScreenWallpaper /data/xdg/Wallpapers/anime/blood-blockade-wallpaper.jpg

include <<get-setting(name="i3/shim")>>
    
### Applications: ###


###########################################
### Commonly Used Application Keybinds: ###
###########################################

bindsym $super+F1 exec $preferredBrowser;focus
bindsym $super+F2 exec $preferredMailClient;focus
bindsym $super+F3 exec $preferredFileManager;focus
bindsym $super+F4 exec $preferredTextEditor;focus

###########################################
### AUTOSTART
###########################################

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

exec_always --no-startup-id syncthing-gtk

###########################################
### KEYBINDINGS
###########################################

# Screen brightness controls
bindsym XF86MonBrightnessUp exec "xbacklight -inc 10; notify-send 'brightness up'"
bindsym XF86MonBrightnessDown exec "xbacklight -dec 10; notify-send 'brightness down'"

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# music control
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl prev
bindsym XF86AudioPlay exec playerctl toggle
bindsym XF86AudioStop exec playerctl stop

# Use Mouse+$super to drag floating windows to their wanted position
floating_modifier $super

# start a terminal
bindsym $super+Return exec $preferredTerminalEmulator

# kill focused window
bindsym $super+Shift+q kill

# start dmenu (a program launcher)
#bindsym $super+Shift+d exec dmenu_run
#bindsym $super+d exec --no-startup-id j4-dmenu-desktop

bindsym $super+d exec "rofi -show run -show-icons -icon-theme $rofi-icons -theme $rofi-theme"

bindsym $super+z exec "rofi -show drun -show-icons -icon-theme $rofi-drun-icons -theme $rofi-drun-theme"

bindsym $super+shift+z exec "rofi -show filebrowser -show-icons -icon-theme $rofi-file-icons -theme $rofi-file-theme"

bindsym Print exec --no-startup-id i3-scrot
bindsym $super+Print --release exec --no-startup-id i3-scrot -w
bindsym $super+Shift+Print --release exec --no-startup-id i3-scrot -s

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $super+d exec --no-startup-id i3-dmenu-desktop

bindsym $super+m exec --no-startup-id dmenu_screenlayout

# change focus
# bindsym $super+j focus left
# bindsym $super+k focus down
# bindsym $super+l focus up
# bindsym $super+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $super+Left focus left
bindsym $super+Down focus down
bindsym $super+Up focus up
bindsym $super+Right focus right

# move focused window
# bindsym $super+Shift+j move left
# bindsym $super+Shift+k move down
# bindsym $super+Shift+l move up
# bindsym $super+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $super+Shift+Left move left
bindsym $super+Shift+Down move down
bindsym $super+Shift+Up move up
bindsym $super+Shift+Right move right

# split orientation
bindsym $super+h split h;exec notify-send 'tile horizontally'
bindsym $super+v split v;exec notify-send 'tile vertically'

# enter fullscreen mode for the focused container
bindsym $super+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $super+s layout stacking
bindsym $super+w layout tabbed
bindsym $super+e layout toggle split

# toggle tiling / floating
bindsym $super+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $super+space focus mode_toggle

# focus the parent container
bindsym $super+a focus parent

# focus the child container
#bindsym $super+d focus child

###########################################
### WORKSPACES
###########################################

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "Emacs"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "Krita"
set $ws9 "IRC"
set $ws10 "Mail"

workspace $ws1 output <<get-setting("xrandr/primary-display")>>
workspace $ws2 output <<get-setting("xrandr/primary-display")>>
workspace $ws3 output <<get-setting("xrandr/primary-display")>>

# back and forth?
workspace_auto_back_and_forth yes
bindsym $super+b workspace back_and_forth
bindsym $super+Shift+b move container to workspace back_and_forth; workspace back_and_forth

bindsym $super+Ctrl+Left workspace prev
bindsym $super+Ctrl+Right workspace next

# switch to workspace
bindsym $super+1 workspace number $ws1
bindsym $super+2 workspace number $ws2
bindsym $super+3 workspace $ws3
bindsym $super+4 workspace number $ws4
bindsym $super+5 workspace number $ws5
bindsym $super+6 workspace number $ws6
bindsym $super+7 workspace number $ws7
bindsym $super+8 workspace $ws8
bindsym $super+9 workspace $ws9
bindsym $super+0 workspace $ws10

# move focused container to workspace
bindsym $super+Shift+1 move container to workspace number $ws1
bindsym $super+Shift+2 move container to workspace number $ws2
bindsym $super+Shift+3 move container to workspace $ws3
bindsym $super+Shift+4 move container to workspace number $ws4
bindsym $super+Shift+5 move container to workspace number $ws5
bindsym $super+Shift+6 move container to workspace number $ws6
bindsym $super+Shift+7 move container to workspace number $ws7
bindsym $super+Shift+8 move container to workspace $ws8
bindsym $super+Shift+9 move container to workspace $ws9
bindsym $super+Shift+0 move container to workspace $ws10

for_window [urgent=latest] focus

###########################################
### LOCKING
###########################################

# reload the configuration file
bindsym $super+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $super+Shift+r restart

# exit i3 (logs you out of your X session)
#bindsym $super+Shift+e exec "i3-nagbar -t warning -m 'Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

bindsym $super+shift+e mode "$supere_system"
set $supere_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$supere_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

###########################################
### RESIZE
###########################################

set $resizeX 5
set $resizeY 5

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # bindsym j resize shrink width $resizeX px or $resizeX ppt
        # bindsym k resize grow height $resizeY px or $resizeY ppt
        # bindsym l resize shrink height $resizeY px or $resizeY ppt
        # bindsym semicolon resize grow width $resizeX px or $resizeX ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width $resizeX px or $resizeX ppt
        bindsym Down resize grow height $resizeY px or $resizeY ppt
        bindsym Up resize shrink height $resizeY px or $resizeY ppt
        bindsym Right resize grow width $resizeX px or $resizeX ppt

        # back to normal: Enter or Escape or $super+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $super+r mode "default"
}

bindsym $super+r mode "resize"

###########################################
### BAR
###########################################

# start either i3bar or polybar (defaults to polybar)
include <<get-setting(name="i3/bar-type")>>

###########################################
### APPLICATION CONFIG
###########################################

# Open applications on specific workspaces
# assign [class="Thunderbird"] $ws1

# Window Roles
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [title="Preferences$"] floating enable

# linux installer
# for_window [class="calamares"] floating enable border normal
for_window [class="Clipgrab"] floating enable
for_window [title="File Transfer*"] floating enable
for_window [class="fpakman"] floating enable
for_window [class="Galculator"] floating enable border pixel 1
for_window [class="GParted"] floating enable border normal
for_window [title="i3_help"] floating enable sticky enable border normal
for_window [class="Lightdm-settings"] floating enable
for_window [class="Lxappearance"] floating enable sticky enable border normal
for_window [title="MuseScore: Play Panel"] floating enable
for_window [class="Nitrogen"] floating enable sticky enable border normal
for_window [class="Oblogout"] fullscreen enable
for_window [class="octopi"] floating enable
for_window [title="About Pale Moon"] floating enable
for_window [class="qt5ct"] floating enable sticky enable border normal
for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
for_window [class="Simple-scan"] floating enable border normal
for_window [class="(?i)System-config-printer.py"] floating enable border normal
for_window [class="Skype"] floating enable border normal
for_window [class="Timeset-gui"] floating enable border normal
for_window [class="(?i)virtualbox"] floating enable border normal
for_window [class="Xfburn"] floating enable

for_window [class="ykman-gui yubikey manager"] floating enable, sticky enable
for_window [class="Pwsafe" instance="pwsafe"] floating enable, sticky enable
for_window [class="Gnuplot" instance="gnuplot"] floating enable
# FIXME: for_window [id="org.fcitx.fcitx5-config-qt"] floating enable
# FIXME: for_window [id="fcitx5-qt5-fcgui-wrapper"] floating enable
# FIXME: for_window [id="gnome-calculator"] floating enable

# Manjaro Helpers
for_window [class="Manjaro-hello"] floating enable
for_window [class="Manjaro Settings Manager"] floating enable border normal

# Garuda Defaults
assign [class=URxvt] 1
for_window [class="bauh"] floating enable
for_window [class="Garuda Settings Manager"] floating enable border normal
for_window [class="garuda-welcome"] floating enable
for_window [class="Pamac-updater"] floating enable
for_window [class="Pamac-manager"] floating enable
for_window [class="azote"] floating enable sticky enable border normal
for_window [class="Timeshift-gtk"] floating enable border normal
# for_window [class="(?i)virtualbox"] floating enable border normal
for_window [class="keepassxc"] floating enable
for_window [class=Viewnior|feh|Audacious|File-roller|Lxappearance|Lxtask|Pavucontrol|upgrade2ultimate.sh] floating enable
for_window [class=URxvt|firedragon|Geany|Evince|Soffice|libreoffice*|mpv|Ghb|Xfburn|Gimp*|Inkscape|Vlc|Lxappearance|Audacity] focus
for_window [class=Xfburn|GParted|System-config-printer.py|Lxtask|Pavucontrol|Exo-helper*|Lxrandr|Arandr] focus

# WM Configs
for_window [instance=".arandr-real"] floating enable
for_window [title="alsamixer"] floating enable border pixel 1

# File Managers
for_window [class="Thunar"] floating enable

# Productivity (Mail/Calendar)
#for_window [class="Thunderbird"] floating enable
for_window [class="Thunderbird"] move container to workspace $ws10

# Terminals (to encourage vterm/etc)
for_window [class="Alacritty"] floating enable

# Zoom
for_window [instance="zoom"] floating enable, sticky enable
for_window [instance="zoom"] inhibit_idle fullscreen

# Steam
for_window [class="Steam" title="^Steam Guard.*"] floating enable
for_window [class="Steam" title="^Steam - News.*"] floating enable
for_window [class="Steam" title="^Friends List"] floating enable
for_window [class="Steam" title="^Steam Login"] floating enable

# Krita
for_window [class="krita"] floating enable
for_window [class="krita"] move container to workspace $ws8
for_window [class="krita" title="^Configure.*"] floating enable

# IRC
for_window [class=quassel] floating enable
for_window [class=quassel] move container to workspace $ws9
for_window [class=konversation title="^Quassel IRC -"] floating disable
for_window [class=konversation] floating enable
for_window [class=konversation] move container to workspace $ws9
for_window [class=konversation window_role="^MainWindow"] floating disable

# Anki
for_window [class="Anki"] floating enable
for_window [class="Anki" title="^Add"] floating enable
for_window [class="Anki" title="^Preferences"] floating enable
for_window [class="Anki" title="^Browse.*"] floating disable
for_window [class="Anki" title="^Anki Main"] floating disable
# Anki Main is the name of the Anki Profile (switch profiles, rename)

# RDP

for_window [class="org.remmina.Remmina" title="Remmina Remote Desktop Client"] floating enable

# Xev
for_window [title="Event Tester"] floating enable

# VNC

focus_on_window_activation focus

# jump to apps
bindsym $super+Control+e [class="Emacs"] focus
bindsym $super+Control+d [conmark="dev"] focus

# Marks
bindsym $super+Control+shift+d mark dev

smart_gaps on
smart_borders on

default_border pixel 3
gaps inner 7
gaps outer 0
hide_edge_borders both

#+end_src

And start either i3bar:

#+begin_src conf :tangle .config/i3/i3bar.conf :noweb yes :comments none
bar {
    i3bar_command i3bar
    status_command i3status
    position bottom

    bindsym button4 nop
    bindsym button5 nop
    # font
    strip_workspace_numbers yes

    # manjaro
    # colors {
        
    #     background #222D31
    #     statusline #F9FAF9
    #     separator  #454947

    #     #                  border  backgr. text
    #     focused_workspace  #F9FAF9 #16a085 #292F34
    #     active_workspace   #595B5B #353836 #FDF6E3
    #     inactive_workspace #595B5B #222D31 #EEE8D5
    #     binding_mode       #16a085 #2C2C2C #F9FAF9
    #     urgent_workspace   #16a085 #FDF6E3 #E5201D
    # }
    
    # garuda 
    colors {
	# garuda
        background #2f343f
        statusline #FFFFFF
        separator  #666666
	
        focused_workspace  #4C7899 #285577 #FFFFFF
        active_workspace   #333333 #222222 #FFFFFF
        inactive_workspace #333333 #222222 #888888
        urgent_workspace   #2F343A #900000 #FFFFFF
        #binding_mode      #2F343A #900000 #FFFFFF
        # colour of border, background, and text
    }
}

###########################################
### COLOR
###########################################

### MANJARO
# Theme colors
# class                 border  backgr. text    indic.   child_border
#client.focused          #556064 #556064 #80FFF9 #FDF6E3
#client.focused_inactive #2F3D44 #2F3D44 #1ABC9C #454948
#client.unfocused        #2F3D44 #2F3D44 #1ABC9C #454948
#client.urgent           #CB4B16 #FDF6E3 #1ABC9C #268BD2
#client.placeholder      #000000 #0c0c0c #ffffff #000000
#client.background       #2B2C2B

# hide/unhide i3status bar
# bindsym $super+m bar mode toggle

### GARUDA
# colour of border, background, text, indicator, and child_border
client.focused              #bf616a #2f343f #d8dee8 #bf616a #d8dee8
client.focused_inactive     #2f343f #2f343f #d8dee8 #2f343f #2f343f
client.unfocused            #2f343f #2f343f #d8dee8 #2f343f #2f343f
client.urgent               #2f343f #2f343f #d8dee8 #2f343f #2f343f
client.placeholder          #2f343f #2f343f #d8dee8 #2f343f #2f343f
client.background           #2f343f

# Color palette used for the terminal ( ~/.Xresources file )
# Colors are gathered based on the documentation:
# https://i3wm.org/docs/userguide.html#xresources
# Change the variable name at the place you want to match the color
# of your terminal like this:
# [example]
# If you want your bar to have the same background color as your
# terminal background change the line 362 from:
# background #14191D
# to:
# background $term_background
# Same logic applied to everything else.
set_from_resource $term_background background
set_from_resource $term_foreground foreground
set_from_resource $term_color0     color0
set_from_resource $term_color1     color1
set_from_resource $term_color2     color2
set_from_resource $term_color3     color3
set_from_resource $term_color4     color4
set_from_resource $term_color5     color5
set_from_resource $term_color6     color6
set_from_resource $term_color7     color7
set_from_resource $term_color8     color8
set_from_resource $term_color9     color9
set_from_resource $term_color10    color10
set_from_resource $term_color11    color11
set_from_resource $term_color12    color12
set_from_resource $term_color13    color13
set_from_resource $term_color14    color14
set_from_resource $term_color15    color15
#+end_src

or polybar:

#+begin_src conf :tangle .config/i3/polybar.conf :noweb yes :comments none
exec_always --no-startup-id polybar panel 2>&1 > /tmp/polybar.1.log
exec_always --no-startup-id dunst 2>&1 > /tmp/dunst.1.log

# lock
bindsym $super+q exec "loginctl lock-session"
# bindsym $super+q exec "i3-nagbar -t warning -m 'Do really want to lock your session?' -B 'Yes, lock session' 'loginctl lock-session'"
#+end_src

*** TODO setup =xidlehook= to notify-send when idletime is about to lock the computer

* Panel

** Polybar

*.config/polybar/custom:*

#+begin_src conf :tangle .config/polybar/custom.ini :noweb yes :comments none

[custom/per_settings]

height = <<get-setting(name="polybar/height")>>
font-0 = "Noto Sans:size=<<get-setting(name="polybar/font-0-size")>>:weight=bold;2"
font-1 = "Font Awesome:size=<<get-setting(name="polybar/font-1-size")>>;2"
font-2 = "Material Icons:size=<<get-setting(name="polybar/font-2-size")>>;5"
font-3 = "Fira Mono:size=<<get-setting(name="polybar/font-3-size")>>;-3"
font-4 = "Noto Sans CJK JP:size=<<get-setting(name="polybar/font-4-size")>>;2"

backlight-card = "<<get-setting(name="polybar/backlight-card")>>"
#+end_src

*.config/polybar/config:*

#+begin_src conf :tangle .config/polybar/config :noweb yes :comments none

; Docs: https://github.com/polybar/polybar
; Themes: https:// adi1090x/polybar-themes
;==========================================================

include-file = ~/.config/polybar/custom.ini

[settings]
screenchange-reload = true

[global/wm]
margin-top = 0
margin-bottom = 0

[colors]
background = #232635
background-alt = #576075
foreground = #A6Accd
foreground-alt = #555
primary = #ffb52a
secondary = #e60053
alert = #bd2c40
disabled = #434645
underline-1 = #c792ea

[bar/panel]
width = 100%
height = ${custom/per_settings.height}
offset-x = 0
offset-y = 0
bottom = true
fixed-center = true
enable-ipc = true

background = ${colors.background}
foreground = ${colors.foreground}

line-size = 2
line-color = #f00

border-size = 0
border-color = #00000000

padding-top = 5
padding-left = 1
padding-right = 1

module-margin = 1

font-0 = ${custom/per_settings.font-0}
font-1 = ${custom/per_settings.font-1}
font-2 = ${custom/per_settings.font-2}
font-3 = ${custom/per_settings.font-3}
font-4 = ${custom/per_settings.font-4}

;modules-left = exwm exwm-path
;modules-center = spotify
;modules-right = telegram mu4e cpu temperature battery date

modules-left = xworkspaces xwindow
modules-center = date
modules-right = cpu temperature battery pulseaudio backlight xkeyboard

tray-position = right
tray-padding = 2
tray-maxsize = 28

cursor-click = pointer
cursor-scroll = ns-resize

; [module/spotify]
; type = custom/script
; exec = ~/.config/polybar/player-status.sh
; interval = 3

; [module/mu4e]
; type = custom/ipc
; hook-0 = emacsclient -e '(dw/polybar-mail-count 500)' | sed -e 's/^"//' -e 's/"$//'
; initial = 1
; format-underline = ${colors.underline-1}
; click-left = emacsclient -e '(dw/go-to-inbox)'

; [module/telegram]
; type = custom/ipc
; hook-0 = emacsclient -e '(dw/polybar-telegram-chats)' | sed -e 's/^"//' -e 's/"$//'
; format-padding = 3
; initial = 1

[module/backlight]
type = internal/backlight
card =  ${custom/per_settings.backlight-card}
enable-scroll = true

format = <label> <bar>
label = 明
label-font = 4
label-foreground = ${colors.foreground}
bar-width = 10
bar-indicator = "⊗"
bar-indicator-foreground = ${colors.foreground}
bar-fill = ─
bar-fill-foreground = ${colors.primary}
bar-empty = ─

[module/pulseaudio]
type = internal/pulseaudio

format-volume-prefix = "音 "
format-volume-prefix-font = 5
format-volume-prefix-foreground = ${colors.foreground}
format-volume = <bar-volume>

label-muted = 音
label-muted-foreground = ${colors.disabled}

click-right = pavucontrol

bar-volume-width = 10
bar-volume-indicator = "⊗"
bar-volume-indicator-foreground = ${colors.foreground}
bar-volume-fill = ─
bar-volume-fill-foreground = ${colors.primary}
bar-volume-empty = ─

[module/xworkspaces]
type = internal/xworkspaces

label-active = %name%
label-active-background = ${colors.background-alt}
label-active-underline= ${colors.primary}
label-active-padding = 1

label-occupied = %name%
label-occupied-padding = 1

label-urgent = %name%
label-urgent-background = ${colors.alert}
label-urgent-padding = 1

label-empty = %name%
label-empty-foreground = ${colors.disabled}
label-empty-padding = 1

[module/xkeyboard]
type = internal/xkeyboard
blacklist-0 = num lock

format-prefix-font = 1
format-prefix-foreground = ${colors.foreground-alt}
format-prefix-underline = ${colors.underline-1}

label-layout = %layout%
label-layout-underline = ${colors.underline-1}

label-indicator-padding = 2
label-indicator-margin = 1
label-indicator-underline = ${colors.underline-1}

[module/cpu]
type = internal/cpu
interval = 2
format = <label> <ramp-coreload>
format-underline = ${colors.underline-1}
;click-left = emacsclient -e "(proced)"
label = %percentage:2%%
ramp-coreload-spacing = 0
ramp-coreload-0 = ▁
ramp-coreload-0-foreground = ${colors.foreground-alt}
ramp-coreload-1 = ▂
ramp-coreload-2 = ▃
ramp-coreload-3 = ▄
ramp-coreload-4 = ▅
ramp-coreload-5 = ▆
ramp-coreload-6 = ▇

[module/memory]
type = internal/memory
interval = 2
format-prefix = "M:"
format-prefix-foreground = ${colors.foreground-alt}
format-underline = ${colors.underline-1}
label = %percentage_used%%

[module/date]
type = internal/date
interval = 5

date = "W%U: %a %b %e"
date-alt = "%A %B %d %Y"

time = %l:%M %p
time-alt = %H:%M:%S

format-prefix-foreground = ${colors.foreground-alt}
format-underline = ${colors.underline-1}

label = %date% %time%

[module/battery]
type = internal/battery
battery = BAT0
adapter = ADP1
full-at = 98
time-format = %-l:%M

label-charging = %percentage%% / %time%
format-charging = <animation-charging> <label-charging>
format-charging-underline = ${colors.underline-1}

label-discharging = %percentage%% / %time%
format-discharging = <ramp-capacity> <label-discharging>
format-discharging-underline = ${self.format-charging-underline}

format-full = <ramp-capacity> <label-full>
format-full-underline = ${self.format-charging-underline}

ramp-capacity-0 = 
ramp-capacity-1 = 
ramp-capacity-2 = 
ramp-capacity-3 = 
ramp-capacity-4 = 

animation-charging-0 = 
animation-charging-1 = 
animation-charging-2 = 
animation-charging-3 = 
animation-charging-4 = 
animation-charging-framerate = 750

[module/temperature]
type = internal/temperature
thermal-zone = 0
warn-temperature = 60

format = <label>
format-underline = ${colors.underline-1}
format-warn = <label-warn>
format-warn-underline = ${self.format-underline}

label = %temperature-c%
label-warn = %temperature-c%!
label-warn-foreground = ${colors.secondary}

#+end_src

*.config/polybar/player-status.sh:*

#+begin_src sh :tangle .config/polybar/player-status.sh :shebang #!/bin/sh

status="$(playerctl -p spotify status 2>&1)"
if [ "$status" != "No players found" ]
then
  artist="$(playerctl -p spotify metadata artist)"
  if [ "$artist" != "" ]
  then
    echo " $(playerctl -p spotify metadata artist) - $(playerctl -p spotify metadata title)"
  else
    # Clear any string that was previously displayed
    echo ""
  fi
else
  # Clear any string that was previously displayed
  echo ""
fi

#+end_src

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"polybar"

#+end_src

* Notifications

** Dunst

*.config/dunst/dunstrc:*

#+begin_src conf :tangle .config/dunst/dunstrc :noweb yes :comments none
[global]
    browser = nyxt
    title = Dunst
    class = Dunst
    corner_radius = 12

    ### Interactions ###
    mouse_left_click = close_current
    mouse_middle_click = do_action
    mouse_right_click = close_all

    ### Display ###
    monitor = 0
    width = (100, 700)
    height = 400

    indicate_hidden = yes # Show number of messages hidden

    shrink = no # Shrink windows smaller than width. ignore width=0
    transparency = 20
    # DEPRECATED notification_height = 0

    separator_height = 5 # Draw a line of pixels between two notifications.
    separator_color = frame

    horizontal_padding = 8
    padding = 8    # between text and separator.

    #frame_color = "#FF8800"
    frame_color = "#89AAEB"
    frame_width = 3
    sort = yes # Sort messages by urgency.

    # Don't remove messages, if the user is idle (no mouse or keyboard input)
    # for longer than idle_threshold seconds.
    idle_threshold = 120

    ### Text ###

    font = Cantarell <<get-setting(name="dunst/font-size")>>
    line_height = 0
    alignment = left
    word_wrap = yes
    ellipsize = end
    ignore_newline = no

    # Set to -1 to disable show_age_threshold
    show_age_threshold = 60
    stack_duplicates = true
    hide_duplicate_count = false

    # Display indicators for URLs (U) and actions (A).
    show_indicators = yes

    # The format of the message.  Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    #   %n  progress value if set without any extra characters
    #   %%  Literal %
    # Markup is allowed
    format = "<b>%s</b>\n%b"
    markup = yes

    ### Icons ###

    # Align icons left/right/off
    icon_position = left
    max_icon_size = <<get-setting(name="dunst/max-icon-size")>>

    # Paths to default icons.
    icon_path = <<get-setting(name="dunst/icon-path")>>

    ### History ###
    history_length = 20
    sticky_history = no # notifications from history be sticky

    startup_notification = false

    ### Misc/Advanced ###

    # Always run rule-defined scripts, even if the notification is suppressed
    always_run_script = true


    ### Integration ###

    # TODO: fix for guix/manjaro
    dmenu = dmenu -p dunst:


# Experimental features that may or may not work correctly. Do not expect them
# to have a consistent behaviour across releases.
[experimental]
    # Calculate the dpi to use on a per-monitor basis.
    # If this setting is enabled the Xft.dpi value will be ignored and instead
    # dunst will attempt to calculate an appropriate dpi value for each monitor
    # using the resolution and physical size. This might be useful in setups
    # where there are multiple screens with very different dpi values.
    per_monitor_dpi = false

[urgency_low]
    # IMPORTANT: colors have to be defined in quotation marks.
    # Otherwise the "#" and following would be interpreted as a comment.
    background = "#222222"
    foreground = "#888888"
    timeout = 10
    # Icon for notifications with low urgency, uncomment to enable
    #icon = /path/to/icon

[urgency_normal]
    background = "#1c1f26"
    foreground = "#ffffff"
    timeout = 10
    # Icon for notifications with normal urgency, uncomment to enable
    #icon = /path/to/icon

[urgency_critical]
    background = "#900000"
    foreground = "#ffffff"
    frame_color = "#ff0000"
    timeout = 0
    # Icon for notifications with critical urgency, uncomment to enable
    #icon = /path/to/icon

[shortcuts]

    # Shortcuts are specified as [modifier+][modifier+]...key
    # Available modifiers are "ctrl", "mod1" (the alt-key), "mod2",
    # "mod3" and "mod4" (windows-key).
    # Xev might be helpful to find names for keys.

    # Close notification.
    close = mod1+space

    # Close all notifications.
    # close_all = ctrl+shift+space
    close_all = ctrl+mod1+space

    # Redisplay last message(s).
    # On the US keyboard layout "grave" is normally above TAB and left
    # of "1".
    history = ctrl+mod4+h

    # Context menu.
    context = ctrl+mod1+c
#+end_src

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"dunst"

#+end_src

*** Dunst Notes

+ Shortcuts are specified as [modifier+][modifier+]...key
+ Available modifiers:
  - ctrl
  - mod1, the alt-key
  - mod2
  - mod3
  - mod4, windows key
+ example mappings
  - Close notification :: =close = ctrl+space=
  - Close all notifications :: =close_all = ctrl+shift+space=

* Launchers

*Guix Packages*

+ Find rofi themes with =ls $HOME/.guix-extra-profiles/desktop/desktop/share/rofi/themes=
+ Specify icon themes with =--icon-theme= (e.g. papirus/breeze)
+ Example scripts [[https://github.com/davatorium/rofi/blob/next/Examples/rofi-file-browser.sh][here]] (e.g. file browser)

#+begin_src scheme :noweb-ref packages :noweb-sep ""
"dmenu"
"rofi"
"rofi-dmenu"
#+end_src


**** TODO try using rofi to [[https://wiki.archlinux.org/title/Rofi#Execute_shell_commands_from_rofi][run quick shell commands]]


* Display Management

#+begin_src sh :tangle .bin/update-screens :shebang #!/bin/sh

case $(hostname) in

    zerocool)
        xrandr --output VIRTUAL1 --off --output eDP1 --mode 2560x1440 --pos 3840x416 --rotate normal --output DP1 --off --output HDMI1 --off --output DP1-3 --off --output DP1-2 --off --output DP1-1 --primary --mode 3840x2160 --pos 0x0 --rotate normal --output DP2 --off
        ;;

    acidburn)
        xrandr --output eDP-1 --mode 2160x1350 --pos 2560x45 --rotate normal --output HDMI-1 --off --output DP-1 --off --output DP-2 --off --output DP-3 --off --output DP-4 --off --output DP-3-1 --off --output DP-3-2 --off --output DP-3-3 --off --output DP-3-1 --off --output DP-3-2 --off --output DP-3-3 --primary --mode 2560x1440 --pos 0x0 --rotate normal
        ;;

    davinci)
        # Temporary: this is for docking my laptop at home with HDMI!
        #xrandr --output HDMI-2 --mode 3840x2160 --pos 0x0 --scale 0.6x0.6 --primary --rotate normal --output HDMI-1 --off --output DP-1 --off --output eDP-1 --mode 1920x1080 --pos 2304x216 --rotate normal --output DP-2 --off
        xrandr --output eDP-1 --mode 1920x1080 --pos 2560x360 --rotate normal --output DP-1-2 --primary --mode 2560x1440 --pos 0x0 --rotate normal --output HDMI-2 --off --output HDMI-1 --off --output DP-1 --off --output DP-1-3 --off --output DP-2 --off --output DP-1-1 --off
        ;;

    phantom)
        # On a new install, run this command first to ensure HDMI works!
        # xrandr --setprovideroutputsource nouveau modesetting
        xrandr --output eDP-1 --primary --mode 3840x2160 --pos 0x0 --rotate normal --output eDP-1-2 --off --output HDMI-1-1 --mode 3840x2160 --pos 3840x0 --rotate normal --output DP-1-1 --off --output DP-1-2 --off
        ;;

esac

#+end_src


* XDG

** Desktop Entries
** Restrict Autostart entries

** MIME Handlers


#+begin_src xml :tangle .local/share/mime/packages/org.xml :mkdirp yes :comments no
<mime-info xmlns='http://www.freedesktop.org/standards/shared-mime-info'>
  <mime-type type="text/org">
    <comment>Emacs Org-mode File</comment>
    <glob pattern="*.org"/>
    <alias type="text/org"/>
  </mime-type>
</mime-info>
#+end_src

*.config/mimeapps.list*

#+begin_src conf :tangle .config/mimeapps.list
[Default Applications]
# IRC
x-scheme-handler/irc=org.kde.konversation.desktop;
x-scheme-handler/ircs=org.kde.konversation.desktop;

# Zoom
x-scheme-handler/zoommtg=us.zoom.Zoom.desktop;

# Emacs and text files
text/org=emacs.desktop;

# Email & Calendar
application/rss+xml=org.mozilla.Thunderbird.desktop;
text/calendar=org.mozilla.Thunderbird.desktop;
application/calendar+json=org.mozilla.Thunderbird.desktop;
application/calendar+xml=org.mozilla.Thunderbird.desktop;
x-scheme-handler/mailto=org.mozilla.Thunderbird.desktop;
message/rfc822=org.mozilla.Thunderbird.desktop;

# browsing (nyxt)
#text/html=nyxt.desktop;
#x-scheme-handler/http=nyxt.desktop;
#x-scheme-handler/https=nyxt.desktop;
#x-scheme-handler/about=nyxt.desktop;
#x-scheme-handler/unknown=nyxt.desktop;

# browsing (firefox)
text/html=userapp-Nightly-FWHMN1.desktop;
x-scheme-handler/http=userapp-Nightly-FWHMN1.desktop;
x-scheme-handler/https=userapp-Nightly-FWHMN1.desktop;
x-scheme-handler/chrome=userapp-Nightly-FWHMN1.desktop;
application/x-extension-htm=userapp-Nightly-FWHMN1.desktop;
application/x-extension-html=userapp-Nightly-FWHMN1.desktop;
application/x-extension-shtml=userapp-Nightly-FWHMN1.desktop;
application/xhtml+xml=userapp-Nightly-FWHMN1.desktop;
application/x-extension-xhtml=userapp-Nightly-FWHMN1.desktop;
application/x-extension-xht=userapp-Nightly-FWHMN1.desktop;
#+end_src

*** Mime types [fn:tecosaur]
Org mode isn't recognised as it's own mime type by default, but that can easily
be changed with the following file. For system-wide changes try
=/usr/share/mime/packages/org.xml=.

#+begin_src xml :tangle .local/share/mime/packages/org.xml :mkdirp yes :comments no
<mime-info xmlns='http://www.freedesktop.org/standards/shared-mime-info'>
  <mime-type type="text/org">
    <comment>Emacs Org-mode File</comment>
    <glob pattern="*.org"/>
    <alias type="text/org"/>
  </mime-type>
</mime-info>
#+end_src

What's nice is that Papirus [[https://github.com/PapirusDevelopmentTeam/papirus-icon-theme/commit/a10fb7f2423d5e30b9c4477416ccdc93c4f3849d][now]] has an icon for =text/org=.
One simply needs to refresh their mime database

#+begin_src shell :tangle (if (string= (shell-command-to-string "xdg-mime query default text/org") "") "setup.sh" "no")
update-mime-database ~/.local/share/mime
#+end_src

Then set Emacs as the default editor

#+begin_src shell :tangle (if (string= (shell-command-to-string "xdg-mime query default text/org") "emacs-client.desktop\n") "no" "setup.sh")
xdg-mime default emacs.desktop text/org
#+end_src

* Applications

** Browsers

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"icecat"
"qutebrowser"
"nyxt"

#+end_src

*** Nyxt

Configs are cloned from another repo

*** Qutebrowser

#+begin_src python :tangle .config/qutebrowser/config.py
# Open every tab as a new window, Vimb style
c.tabs.tabs_are_windows = True
c.tabs.show = "multiple"
c.tabs.last_close = "close"

c.auto_save.session = True
c.scrolling.smooth = True
c.session.lazy_restore = True
c.content.autoplay = False

# Scale pages and UI better for hidpi
#c.zoom.default = "<<get-setting(name="qutebrowser/default-zoom")>>%"
c.fonts.hints = "bold 20pt monospace"

# Better default fonts
c.fonts.web.family.standard = "NotoSans"
c.fonts.web.family.serif = "NotoSerif"
c.fonts.web.family.sans_serif = "NotoSans"
c.fonts.web.family.fixed = "NotoSansMono"
c.fonts.statusbar = "18pt NotoSerif"
#c.fonts.web.family.standard = "Bitstream Vera Sans"
#c.fonts.web.family.serif = "Bitstream Vera Serif"
#c.fonts.web.family.sans_serif = "Bitstream Vera Sans"
#c.fonts.web.family.fixed = "Fira Mono"
#c.fonts.statusbar = "18pt Cantarell"

# Use dark mode where possible
c.colors.webpage.darkmode.enabled = True
c.colors.webpage.darkmode.policy.images = "never"
c.colors.webpage.bg = "black"

# Automatically turn on insert mode when a loaded page focuses a text field
c.input.insert_mode.auto_load = True

# Edit fields in Emacs with Ctrl+E
c.editor.command = ["emacsclient", "+{line}:{column}", "{file}"]

# Make Ctrl+g quit everything like in Emacs
config.bind('<Ctrl-g>', 'leave-mode', mode='insert')
config.bind('<Ctrl-g>', 'leave-mode', mode='command')
config.bind('<Ctrl-g>', 'leave-mode', mode='prompt')
config.bind('<Ctrl-g>', 'leave-mode', mode='hint')
config.bind('v', 'spawn ~/.dotfiles/bin/umpv {url}')
config.bind('V', 'hint links spawn ~/.dotfiles/bin/umpv {hint-url}')

# Tweak some keybindings
config.unbind('d') # Don't close window on lower-case 'd'
config.bind('yy', 'yank')

# Vim-style movement keys in command mode
config.bind('<Ctrl-j>', 'completion-item-focus --history next', mode='command')
config.bind('<Ctrl-k>', 'completion-item-focus --history prev', mode='command')

# More binding hints here: https://gitlab.com/Kaligule/qutebrowser-emacs-config/blob/master/config.py

config.bind('<Ctrl-alt-t', 'config-cycle tabs.tabs_are_windows')

# Load the autoconfig file (quteconfig.py)
config.load_autoconfig()
#+end_src


#+begin_src conf :tangle .config/qutebrowser/quickmarks
ddg https://duckduckgo.com/?q $0
gh https://github.com/$0
ghs https://github.com/search?q $0
ghn https://github.com/notifications
oai2 https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md
oai3 https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md
dwdot https://github.com/daviwil/dotfiles
#+end_src

** Chat

#+begin_src scheme :noweb-ref packages :noweb-sep ""

;; chat
"quassel"

#+end_src

** File Managers

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"thunar"

#+end_src


** Terminals

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"alacritty"
"terminator"

#+end_src

#+begin_src yaml :tangle .config/alacritty/alacritty.yml
env:
  TERM: xterm-256color

shell:
  program:  /bin/sh
  args:
    - --login

window:
  dimensions:
    columns: 100
    lines: 30

  dynamic_padding: true
  decorations: full
  dynamic_title: true
  title: Alacritty

  class:
    instance: Alacritty
    general: Alacritty

  gtk_theme_variant: dark

mouse:
  hide_when_typing: true
  #url: #url launcher

#mouse_bindings:

key_bindings:
  - { key: V,        mods: Control|Shift, action: Paste            }
  - { key: C,        mods: Control|Shift, action: Copy             }
  - { key: Insert,   mods: Shift,         action: PasteSelection   }
  - { key: Key0,     mods: Control,       action: ResetFontSize    }
  - { key: Equals,   mods: Control,       action: IncreaseFontSize }
  - { key: Plus,     mods: Control,       action: IncreaseFontSize }
  - { key: Minus,    mods: Control,       action: DecreaseFontSize }
  - { key: Minus,    mods: Control,       action: DecreaseFontSize }

cursor:
  style: Block
  unfocused_hollow: true

scrolling:
  history: 10000
  multiplier: 3

font:
  size: 12
  normal:
    family: "DejaVuSansMono"
    #family: "JuliaMono"
    #family: "JuliaMono-Regular"
  bold:
    family: "DejaVuSansMono"
    #family: "JuliaMono"
    #family: "JuliaMono-Bold"
  italic:
    family: "DejaVuSansMono"
    #family: "JuliaMono"
    #family: "JuliaMono-Italic"
  bold_italic:
    family: "DejaVuSansMono"
    #family: "JuliaMono"
    #family: "JuliaMono-BoldItalic"
    #size: 12

# background_opacity: 1.0
draw_bold_text_with_bright_colors: true
save_to_clipboard: true
live_config_reload: true

# https://github.com/eendroroy/alacritty-theme/tree/master/themes/argonaut.yaml
colors:
  # Default colors
  primary:
    background: '0x2c2c2c'
    foreground: '0xd6d6d6'

    dim_foreground:    '0xdbdbdb'
    bright_foreground: '0xd9d9d9'
    dim_background:    '0x202020' # not sure
    bright_background: '0x3a3a3a' # not sure

  # Cursor colors
  cursor:
    text:   '0x2c2c2c'
    cursor: '0xd9d9d9'

  # Normal colors
  normal:
    black:   '0x1c1c1c'
    red:     '0xbc5653'
    green:   '0x909d63'
    yellow:  '0xebc17a'
    blue:    '0x7eaac7'
    magenta: '0xaa6292'
    cyan:    '0x86d3ce'
    white:   '0xcacaca'

  # Bright colors
  bright:
    black:   '0x636363'
    red:     '0xbc5653'
    green:   '0x909d63'
    yellow:  '0xebc17a'
    blue:    '0x7eaac7'
    magenta: '0xaa6292'
    cyan:    '0x86d3ce'
    white:   '0xf7f7f7'

  # Dim colors
  dim:
    black:   '0x232323'
    red:     '0x74423f'
    green:   '0x5e6547'
    yellow:  '0x8b7653'
    blue:    '0x556b79'
    magenta: '0x6e4962'
    cyan:    '0x5c8482'
    white:   '0x828282'
#+end_src

** Password Management

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"pwsafe"

#+end_src

** Audio Device Control

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

#+end_src

** Media Players

*** mpv

[[https://mpv.io/][mpv]] is a simple yet powerful video player.  Paired with [[http://ytdl-org.github.io/youtube-dl/][youtube-dl]] it can even stream YouTube videos.  [[https://github.com/hoyon/mpv-mpris][mpv-mpris]] allows playback control via [[https://github.com/altdesktop/playerctl][playerctl]].

*.config/mpv/mpv.conf*

#+begin_src conf :tangle .config/mpv/mpv.conf :noweb yes :comments none

# Configure playback quality
vo=gpu
hwdec=vaapi
profile=gpu-hq
scale=ewa_lanczossharp
cscale=ewa_lanczossharp

# Start the window in the upper right screen corner
geometry=22%-30+20

# Save video position on quit
save-position-on-quit

# Enable control by MPRIS
script=~/.guix-extra-profiles/desktop/desktop/lib/mpris.so

# Limit the resolution of YouTube videos
ytdl=yes
ytdl-format=bestvideo[height<=?720]+bestaudio/best

# When playing audio files, display the album art
audio-display=attachment

# Keep the player open after the file finishes
keep-open

#+end_src

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"mpv"
"mpv-mpris"
"youtube-dl"
"playerctl"

#+end_src

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
"mpv"
"mpv-mpris"
"youtube-dl"
"playerctl"
#+end_src

*** Codecs and Drivers

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
"gstreamer"
"gst-plugins-base"
"gst-plugins-good"
"gst-plugins-bad"
;; "gst-plugins-ugly"
"gst-libav"
"intel-vaapi-driver"
"libva-utils"
#+end_src

** Image Viewers and Editors

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
"feh"
"scrot"
#+end_src

** Document Readers

#+begin_src conf :tangle .config/zathura/zathurarc

# Automatically adjust the document to full width
set adjust-open width

# Set the title to the filename
set window-title-basename true

# Larger scroll steps with j/k
set scroll-step 150

# Adjusting the document
map [normal] E adjust_window best-fit
map [fullscreen] E adjust_window best-fit
map [normal] e adjust_window width
map [fullscreen] e adjust_window width

# Toggling the inverted colours
map <C-i> recolor
map <C-g> abort

#+end_src

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"zathura"
"zathura-pdf-mupdf"

#+end_src

** Syncthing

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"syncthing"
"syncthing-gtk"

#+end_src

** Flatpak

#+begin_example sh

flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
flatpak remote-add --user --if-not-exists flathub-beta https://flathub.org/beta-repo/flathub-beta.flatpakrepo

# browser
flatpak install --user flathub com.qutebrowser.qutebrowser

# chat
flatpak install --user flathub com.discordapp.Discord
flatpak install --user flathub com.zulip.Zulip
flatpak install --user flathub org.kde.konversation
flatpak install --user flathub org.quassel_irc.QuasselClient
flatpak install --user flathub us.zoom.Zoom

# media
flatpak install --user flathub com.obsproject.Studio
flatpak install --user flathub org.videolan.VLC

# creative
flatpak install --user flathub org.blender.Blender
flatpak install --user flathub org.kde.Krita
flatpak install --user flathub org.freecadweb.FreeCAD
flatpak install --user flathub com.ultimaker.cura

# misc
# texlive needs to be installed before anki for latex
flatpak --user install flathub org.freedesktop.Sdk.Extension.texlive
flatpak --user install flathub net.ankiweb.Anki

# needed for fonts
flatpak install --user flathub org.gustavoperedo.FontDownloader

#+end_example

*** Fontconfig fix

+ manually add fonts into =~/.dotfiles/fonts=
+ add an override to make this path avaiable in flatpak
  - ensure the =--filesystem= bind mounts match the =FONTCONFIG_...= var which cannot be or include links

#+begin_src bash :eval no
flatpak --user override \
    --filesystem=~/.dotfiles/.config/fontconfig:ro \
    --filesystem=~/.dotfiles/fonts:ro \
    --filesystem=~/.guix-extra-profiles/desktop/desktop/share/fonts:ro \
    --env=FONTCONFIG_PATH=$HOME/.dotfiles/.config/fontconfig/conf.d \
    --env=FONTCONFIG_FILE=$HOME/.dotfiles/.config/fontconfig/fonts.conf
#+end_src

** Printing

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"system-config-printer"

#+end_src

** System

#+begin_src scheme :noweb-ref packages :noweb-sep ""
"d-feet"
;; "systemdgenie"
#+end_src

* Desktop Profiles

** Desktop Profile

*.config/guix/manifests/desktop.scm:*

#+begin_src scheme :tangle .config/guix/manifests/desktop.scm :noweb yes :comments none

(specifications->manifest
 '(
   <<packages>>
))

#+end_src

** Desktop Bin Profile

** i3 Profile

*.config/guix/manifests/i3.scm:*

#+begin_src scheme :tangle .config/guix/manifests/i3.scm :noweb yes :comments none

(specifications->manifest
 '(
   <<i3packages>>
))

#+end_src

** Browsers

#+begin_src scheme :tangle .config/guix/manifests/browsers.scm :comments none

(specifications->manifest
'(
"ungoogled-chromium"
"firefox"
))

#+end_src

* Notes

** Bluetooth Setup

If you need to manually connect to Bluetooth audio devices using =bluetoothctl=,
as DW currently does in Guix, you'll need to enter these commands at the
=bluetoothctl= prompt:

#+begin_src shell :eval no

  system-alias "my-hostname" # To configure your laptop's device name
  default-agent
  power on
  scan on
  # Wait for your device to appear
  pair 04:52:C7:5E:5C:A8
  trust 04:52:C7:5E:5C:A8 # To enable auto-connect
  connect 04:52:C7:5E:5C:A8

#+end_src

* Footnotes

[fn:tecosaur] tecosaur [[https://github.com/tecosaur/emacs-config][emacs config]]
