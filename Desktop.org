:PROPERTIES:
:ID:       b03d47fc-e81c-409f-bf95-0d973930e73f
:END:
#+TITLE: Desktop Environment
#+PROPERTY: header-args :mkdirp yes
#+PROPERTY: header-args:sh   :tangle-mode (identity #o555)
#+PROPERTY: header-args:conf :tangle-mode (identity #o555)
#+OPTIONS: toc:nil

* Table of Contents :TOC_3_gh:
- [[#transitioning-from-arch-to-guix][Transitioning From Arch To Guix]]
- [[#system-settings][System Settings]]
  - [[#disk-mounting][Disk Mounting]]
  - [[#user-services][User Services]]
  - [[#scheduled-tasks][Scheduled Tasks]]
- [[#fonts-and-themes][Fonts and Themes]]
- [[#input][Input]]
  - [[#fcitx5][FCITX5]]
- [[#window-management][Window Management]]
  - [[#sway][Sway]]
    - [[#configs][Configs]]
    - [[#scripts][Scripts]]
- [[#panel][Panel]]
  - [[#waybar][Waybar]]
    - [[#destructure--tangle-waybar-config][destructure & tangle waybar config]]
- [[#launchers][Launchers]]
- [[#desktop-notifications][Desktop Notifications]]
  - [[#dunst][Dunst]]
- [[#display-management][Display Management]]
- [[#xdg][XDG]]
  - [[#desktop-entries][Desktop Entries]]
  - [[#restrict-autostart-entries][Restrict Autostart entries]]
  - [[#mime-handlers][MIME Handlers]]
- [[#applications][Applications]]
  - [[#browsers][Browsers]]
  - [[#password-management][Password Management]]
  - [[#audio-device-control][Audio Device Control]]
  - [[#media-players][Media Players]]
    - [[#mpv][MPV]]
    - [[#codecs-and-drivers][Codecs and Drivers]]
  - [[#image-viewers-and-editors][Image Viewers and Editors]]
  - [[#games][Games]]
  - [[#document-readers][Document Readers]]
    - [[#zathura-and-configzathurazathurarc][Zathura and =.config/zathura/zathurarc]]
  - [[#syncthing][Syncthing]]
  - [[#flatpak][Flatpak]]
  - [[#printing][Printing]]
  - [[#desktop-tools][Desktop Tools]]
    - [[#xdg-1][XDG]]
  - [[#system-tools][System Tools]]
  - [[#wayland-tools][Wayland Tools]]
    - [[#equivalent-tools][Equivalent Tools]]
- [[#desktop-profile][Desktop Profile]]

**** TODO tangle permissions
**** TODO set the org-babel :comments format
- run =find . -name "ob-*.el" -type f -exec grep --color=auto -nH --null -e 'comment' \{\} += from within the org repo
- look in =ob-core= for interface and elsewhere for =(comment-region)= refs
- until then, treat sway configs as =shell=


* Transitioning From Arch To Guix

I'm focused on getting settled into the Sway/Wayland ecosystem for now.

+ As I transition to Sway, I'll be destructuring my configs (pieced together
  from Garuda/elsewhere) into tangled configs.
+ As I transition to Guix, I'll be moving the packages from =pacman= to =guix=:
  - When something is moved into the *Guix realm*, it will be added to the appropriate =.guix-extra-profiles=
    - See =.profile= in [[https://github.com/daviwil/dotfiles/blob/master/.profile][davilwil/dotfiles]] to get a feel for how these will be loaded.
    - Search his dotfiles for [[https://github.com/daviwil/dotfiles/search?q=manifests][manifests]] to understand how additional guix
      profiles can be tnagled & layered on.
  - When something is moved out of the *Arch realm*, it will be removed/ignored
    in =pacman= and =yay=. This is how =emacs= is set up for now.
+ Hopefully, there will be something of a category realm.
  - Here, self-contained applications will be bundled using [[https://github.com/mviereck/x11docker][x11docker]]
  - This may be more appropriate to move out of the desktop/pc layer and into
    the network/virt layer.

* System Settings

** Disk Mounting

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
;; "udiskie"
#+end_src

** User Services


** Scheduled Tasks


* Fonts and Themes


*Guix Packages"

#+begin_src scheme :noweb-ref packages :noweb-sep ""
  ;; GTK Themes
  "arc-icon-theme"
  "matcha-theme"
  "hicolor-icon-theme"
  "gnome-icon-theme"
  "gnome-backgrounds"
  "papirus-icon-theme"
  "breeze-icons"

  ;; Fonts
  "font-fira-code"
  "font-jetbrains-mono"
  "font-iosevka"
  "font-iosevka-aile"
  "font-abattis-cantarell"
  "font-dejavu"
  "font-google-noto"
  "font-gnu-freefont"
  "font-liberation"
  "font-awesome"
  "font-google-material-design-icons"
  "gs-fonts"

  ;; more fonts
  "font-juliamono"
  "font-dejavu"
#+end_src

*.config/fontconfig/fonts.conf*

#+begin_src xml :tangle .config/fontconfig/fonts.conf
<!DOCTYPE fontconfig SYSTEM "fonts.dtd">
<fontconfig>
  <dir>~/.dotfiles/fonts</dir>
  <dir>~/.guix-extra-profiles/desktop/desktop/share/fonts</dir>
  <alias>
    <family>Apple Color Emoji</family>
    <prefer>
      <family>Noto Color Emoji</family>
    </prefer>
  </alias>
</fontconfig>
#+end_src

* Input

** FCITX5

#+*Guix Packages"

#+begin_src scheme :noweb-ref packages :noweb-sep ""

#+end_src

**** TODO guix packages for FCITX5

* Window Management

** Sway

*** Configs
:PROPERTIES:
:header-args+: :tangle-mode (identity #o644) :mkdirp yes :comments link
:header-args:sh+: :tangle-mode (identity #o644) :mkdirp yes :comments link
:END:

**** Startup

#+begin_src sh :tangle .config/sway/config
# Config for sway
#
# Read `man 5 sway` for a complete reference.

set $configpath $HOME/.config/sway/config.d

include $configpath/_startp

include $configpath/autostart.garuda
include $configpath/autostart

include $configpath/default.garuda
include $configpath/default

include $configpath/clamshell

include $configpath/tiling.garuda
include $configpath/tiling

include $configpath/input
include $configpath/output
include $configpath/keyboard

include $configpath/theme

# only enable this if every app you use is compatible with wayland
# xwayland disable
#+end_src

+ [ ] add shimming?
+ [ ] break out into definitions

**** Startup

#+begin_src sh :tangle .config/sway/config.d/_startup
# TODO init vars to be shared
#+end_src

**** Default

#+begin_src sh :tangle .config/sway/config.d/default

#+end_src

**** Autostart

#+begin_src sh :tangle .config/sway/config.d/autostart

#+end_src

**** Misc

***** Clamshell Mode

#+begin_src sh :tangle .config/sway/config.d/clamshell
set $laptop <eDP-1>
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable

exec_always ~/.config/sway/scripts/clamshell.sh
#+end_src

**** Desktop

#+begin_src sh :tangle .config/sway/config.d/desktop

#+end_src

**** Keybinding

#+begin_src sh :tangle .config/sway/config.d/keybinding

#+end_src

**** Tiling

#+begin_src sh :tangle .config/sway/config.d/tiling
for_window [class="Pwsafe" instance="pwsafe"] floating enable
for_window [class="Gnuplot" instance="gnuplot"] floating enable
for_window [app_id="zoom"] floating enable
for_window [app_id="zoom"] inhibit_idle fullscreen
set $transparency_val 1

# Inhibit idle
for_window [app_id="firedragon"] inhibit_idle fullscreen
for_window [app_id="Chromium"] inhibit_idle fullscreen
#+end_src

**** Input

Run =swaymsg -t get_inputs= to get valid input specs.

#+begin_src sh :tangle .config/sway/config.d/input
input type:touchpad {
      dwt enabled
      tap enabled
      natural_scroll enabled
}

# Read `man 5 sway-input` for more information about this section.
# - more details in `xkeyboard-config`

input type:keyboard {
      xkb_model "pc105"
      xkb_layout "io"
      xkb_variant "altgr-intl"
      xkb_options "caps:hyper"
      # xkb_options "caps:swapescape"
}

# input type:keyboard xkb_model "pc105"

#+end_src

Getting input identifiers via =localectl status=

#+begin_src sh :tangle .config/sway/config.d/input
#exec_always {
#   'swaymsg input type:keyboard xkb_layout "$(localectl status | grep "X11 Layout" | sed -e "s/^.*X11 Layout://")"'
#   'swaymsg input type:keyboard xkb_variant "$(localectl status | grep "X11 Variant" | sed -e "s/^.*X11 Variant://")"'
#}
#+end_src

**** Output

#+begin_src sh :tangle .config/sway/config.d/output
#output eDP-1 resolution 2880x1800 position 0,1440 scale 1
#output HDMI-A-1 resolution 2560x1440 position 0,0

output eDP-1 resolution 2880x1800 position 0,2160 scale 1
output HDMI-A-1 resolution 3840x2160 position 0,0
#+end_src

**** Keyboard

**** Theme

#+begin_src sh :tangle .config/sway/config.d/theme
# Apply gtk theming
exec_always ~/.config/sway/scripts/import-gsettings

# Set inner/outer gaps
gaps inner 2
gaps outer 2

# Hide titlebar on windows:
default_border pixel 1

# Default Font
font pango:Noto Sans Regular 10

# Thin borders:
smart_borders on

# Set wallpaper:
# exec ~/.azotebg

# Title format for windows
for_window [shell="xdg_shell"] title_format "%title (%app_id)"
for_window [shell="x_wayland"] title_format "%class - %title"

## Window decoration
# class                 border  backgr. text    indicator child_border
client.focused          #88c0d0 #434c5e #eceff4 #8fbcbb   #88c0d0
client.focused_inactive #88c0d0 #2e3440 #d8dee9 #4c566a   #4c566a
client.unfocused        #88c0d0 #2e3440 #d8dee9 #4c566a   #4c566a
client.urgent           #ebcb8b #ebcb8b #2e3440 #8fbcbb   #ebcb8b

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
   swaybar_command waybar
}
#+end_src

*** Scripts

* Panel

** Waybar

*.config/waybar/config:*

*** TODO destructure & tangle waybar config

* Launchers

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
;; nwg-drawer
#+end_src

* Desktop Notifications

** Dunst

[[https://dunst-project.org/][Dunst]] displays desktop notifications.


* Display Management



* XDG

** Desktop Entries
** Restrict Autostart entries

**** TODO review =.config/autostart/*=

** MIME Handlers

*.config/mimeapps.list*

#+begin_example conf
#+begin_src conf :tangle .config/mimeapps.list
[Default Applications]
text/html=qutebrowser.desktop
x-scheme-handler/http=qutebrowser.desktop
x-scheme-handler/https=qutebrowser.desktop
x-scheme-handler/about=qutebrowser.desktop
x-scheme-handler/unknown=qutebrowser.desktop
#+end_src
#+end_example


* Applications

** Browsers


*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
;; "qutebrowser"
;; nyxt?
#+end_src

** Password Management

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
;; password safe?
#+end_src

** Audio Device Control

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
;; "alsa-utils"
;; pavucontrol
#+end_src



** Media Players

*** MPV

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
;; "mpv"
;; "mpv-mpris"
;; "youtube-dl"
;; "playerctl"
#+end_src


*** Codecs and Drivers

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
;; "gstreamer"
;; "gst-plugins-base"
;; "gst-plugins-good"
;; "gst-plugins-bad"
;; "gst-plugins-ugly"
;; "gst-libav"
;; "intel-vaapi-driver"
;; "libva-utils"
#+end_src

** Image Viewers and Editors


*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
;; "feh"
;; "gimp"
;; "scrot"
#+end_src

** Games

*.config/guix/manifests/games.scm*

#+begin_src scheme :tangle .config/guix/manifests/games.scm :noweb yes
(specifications->manifest
 '("aisleriot"
   "gnome-mahjongg"))
#+end_src

** Document Readers

*** TODO Zathura and =.config/zathura/zathurarc

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
;; "zathura"
;; "zathura-pdf-mupdf"
#+end_src


** Syncthing

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
;; "syncthing"
;; "syncthing-gtk"
#+end_src

** Flatpak

*Applications to Install*

#+begin_example sh
flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
flatpak remote-add --user --if-not-exists flathub-beta https://flathub.org/beta-repo/flathub-beta.flatpakrepo
flatpak install --user flathub com.spotify.Client
flatpak install --user flathub com.valvesoftware.Steam
flatpak install --user flathub com.microsoft.Teams
flatpak install --user flathub com.discordapp.Discord
flatpak install --user flathub-beta com.obsproject.Studio
#+end_example

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
;; "flatpak"
#+end_src


** Printing

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
;; "system-config-printer"
#+end_src


** Desktop Tools

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
;; "compton" ;; in wayland, cannot sub a compositor in
;; "redshift"
;; "gucharmap"
;; "fontmanager"
#+end_src

+ compton :: an alternative compositor for X
  - incompatible in Wayland, since it doesn't offer modular compositors
+ redshift :: control color temperature according to surroundings.
  - requires =libxcb= X11 client lib
  - for wayland: =gammastep= or =wlsunset=
+ gucharmap :: unicode character map (GTK)
+ fontmanager :: provides GTK tools to aid configuration of fonts
+ brightnessctl :: lightweight brightness control tool

*** XDG

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
;; "xdg-utils"          ;; for xdg-open, etc
;; "xdg-dbus-proxy"     ;; for Flatpak
;; "gtk+:bin"           ;; for gtk-launch
;; "glib:bin"           ;; for gio-launch-desktop
;; "shared-mime-info"   ;; for mimes
#+end_src

** System Tools

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

#+end_src


** Wayland Tools

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
;; "libinput"
;; "wev"
;; "wlr-randr"
;; "wdisplays"
#+end_src

*** Equivalent Tools

+ xev :: wev
+ xset ::
+ xrdb ::
+ xhost ::
+ xmodmap ::
+ setxkbmap ::
+ xrandr :: wlr-randr
  - also =swaymsg output ...='
+ arandr :: wdisplays
+ xss-lock ::
+ xinput ::
+ xob :: wob


* Desktop Profile

*.config/guix/manifests/desktop.scm*

#+begin_src scheme :tangle .config/guix/manifests/desktop.scm :noweb yes
(specifications->manifest
 '(
   <<packages>>
    ))

#+end_src

#+end_src

**

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

#+end_src
