:PROPERTIES:
:ID:       b03d47fc-e81c-409f-bf95-0d973930e73f
:END:
#+TITLE: Guix Desktop
#+PROPERTY: header-args :mkdirp yes
#+PROPERTY: header-args:sh     :tangle-mode (identity #o555) :mkdirp yes
#+PROPERTY: header-args:conf   :tangle-mode (identity #o444) :mkdirp yes
#+property: header-args:scheme :tangle-mode (identity #o644) :mkdirp yes :comments link
#+OPTIONS: toc:nil

* Table of Contents :TOC_3_gh:
- [[#system-settings][System Settings]]
  - [[#disk-mounting][Disk Mounting]]
  - [[#user-services][User Services]]
  - [[#scheduled-tasks][Scheduled Tasks]]
- [[#fonts][Fonts]]
- [[#themes][Themes]]
  - [[#xsettings][XSettings]]
  - [[#color-schemes][Color Schemes]]
- [[#input][Input]]
  - [[#fcitx5][FCITX5]]
- [[#window-management][Window Management]]
  - [[#i3][i3]]
- [[#panel][Panel]]
- [[#launchers][Launchers]]
- [[#display-management][Display Management]]
- [[#xdg][XDG]]
  - [[#desktop-entries][Desktop Entries]]
  - [[#restrict-autostart-entries][Restrict Autostart entries]]
  - [[#mime-handlers][MIME Handlers]]
- [[#applications][Applications]]
  - [[#browsers][Browsers]]
    - [[#nyxt][Nyxt]]
    - [[#qutebrowser][Qutebrowser]]
  - [[#file-managers][File Managers]]
  - [[#terminals][Terminals]]
  - [[#password-management][Password Management]]
  - [[#audio-device-control][Audio Device Control]]
  - [[#media-players][Media Players]]
    - [[#mpv][mpv]]
    - [[#codecs-and-drivers][Codecs and Drivers]]
  - [[#image-viewers-and-editors][Image Viewers and Editors]]
  - [[#games][Games]]
  - [[#document-readers][Document Readers]]
  - [[#syncthing][Syncthing]]
  - [[#flatpak][Flatpak]]
  - [[#printing][Printing]]
  - [[#desktop-tools][Desktop Tools]]
    - [[#xdg-1][XDG]]
  - [[#system-tools][System Tools]]
  - [[#xorg-tools][Xorg Tools]]
  - [[#misc-tools][Misc Tools]]
- [[#desktop-profiles][Desktop Profiles]]
- [[#notes][Notes]]
  - [[#bluetooth-setup][Bluetooth Setup]]

**** TODO tangle permissions
**** TODO set the org-babel :comments format
- run =find . -name "ob-*.el" -type f -exec grep --color=auto -nH --null -e 'comment' \{\} += from within the org repo
- look in =ob-core= for interface and elsewhere for =(comment-region)= refs
- until then, treat sway configs as =shell=

* System Settings

#+NAME: system-settings
#+begin_src emacs-lisp :session system-settings
(load-file ".emacs.d/per-system-settings.el")
#+end_src

#+NAME: get-setting
#+begin_src emacs-lisp :var name="nil" :session system-settings
(dw/system-settings-get (intern name))
#+end_src
  
** Disk Mounting

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
"udiskie"
#+end_src

** User Services

#+begin_src scheme :tangle .config/shepherd/init.scm

(define mcron
  (make <service>
    #:provides '(mcron)
    #:respawn? #t
    #:start (make-forkexec-constructor '("mcron"))
    #:stop  (make-kill-destructor)))

(define syncthing
  (make <service>
    #:provides '(syncthing)
    #:respawn? #t
    #:start (make-forkexec-constructor '("syncthing" "-no-browser"))
    #:stop (make-kill-destructor)))

(register-services mcron syncthing)
(action 'shepherd 'daemonize)

;; Start user services
(for-each start '(mcron syncthing))

#+end_src

** Scheduled Tasks


* Fonts

*Guix Packages"

#+begin_src scheme :noweb-ref packages :noweb-sep ""

  ;; Settings Manager
  "xsettingsd"

  ;; GTK Themes
  "arc-icon-theme"
  "matcha-theme"
  "hicolor-icon-theme"
  "gnome-icon-theme"
  "gnome-backgrounds"
  "papirus-icon-theme"
  "breeze-icons"

  ;; Fonts
  "font-fira-code"
  "font-jetbrains-mono"
  "font-iosevka"
  "font-iosevka-aile"
  "font-abattis-cantarell"
  "font-dejavu"
  "font-google-noto"
  "font-gnu-freefont"
  "font-liberation"
  "font-awesome"
  "font-google-material-design-icons"
  "font-ghostscript"
  "font-bitstream-vera"

  ;; more fonts
  "font-juliamono"
  "font-adobe-source-han-sans"

#+end_src

*.config/fontconfig/fonts.conf*

#+begin_src xml :tangle .config/fontconfig/fonts.conf
<?xml version="1.0"?>
<!DOCTYPE fontconfig SYSTEM "fonts.dtd">
<fontconfig>
  <dir>~/.dotfiles/fonts</dir>
  <dir>~/.guix-extra-profiles/desktop/desktop/share/fonts</dir>
  <alias>
    <family>Apple Color Emoji</family>
    <prefer>
      <family>Noto Color Emoji</family>
    </prefer>
  </alias>
</fontconfig>
#+end_src

* Themes

** XSettings

*.config/xsettingsd/xsettingsd.conf:*

#+begin_src conf :tangle .config/xsettingsd/xsettingsd.conf :noweb yes :comments none
Net/ThemeName "Matcha-dark-azul"
Net/IconThemeName "Papirus-Dark"
Gtk/DecorationLayout "menu:minimize,maximize,close"
Gtk/FontName "Cantarell 11"
Gtk/MonospaceFontName "Fira Mono 10"
Gtk/CursorThemeName "Adwaita"
Xft/Antialias 1
Xft/Hinting 0
Xft/HintStyle "hintnone"
<<dpi()>> # 1024 * DPI
#+end_src

*DPI*

#+NAME: dpi
#+begin_src emacs-lisp :session=system-settings :var settings=system-settings
(or (and (alist-get 'desktop/dpi dw/system-settings)
     (concat "Xft/DPI "
             (number-to-string (* 1024 (alist-get 'desktop/dpi dw/system-settings)))))
    "")
#+end_src

** Color Schemes

* Input

** FCITX5

#+*Guix Packages"

#+begin_src scheme :noweb-ref packages :noweb-sep ""

#+end_src

**** TODO guix packages for FCITX5

* Window Management

** i3

#+begin_src conf :tangle .config/i3/config :noweb yes :comments none

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Serif Mono 12

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

exec_always polybar panel 2>&1 > /tmp/polybar.1.log
exec_always syncthing-gtk

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
#         status_command i3status
# }

for_window [class="Pwsafe" instance="pwsafe"] floating enable, sticky enable
for_window [class="Gnuplot" instance="gnuplot"] floating enable
for_window [id="org.fcitx.fcitx5-config-qt"] floating enable
for_window [id="fcitx5-qt5-fcgui-wrapper"] floating enable
for_window [id="zoom"] floating enable, sticky enable
for_window [id="zoom"] inhibit_idle fullscreen
for_window [id="gnome-calculator"] floating enable

focus_on_window_activation focus

# jump to apps
bindsym $mod+Control+e [class="Emacs"] focus
bindsym $mod+Control+d [conmark="dev"] focus

# Marks
bindsym $mod+Control+shift+d mark dev

default_border pixel 2
gaps inner 12
hide_edge_borders both

#+end_src

*Guix Packages*

#+begin_src scheme :noweb-ref i3packages :noweb-sep ""

"i3-gaps"
"i3status"
"i3lock"
"dmenu"

#+end_src


* Panel

*.config/polybar/config:*

#+begin_src conf :tangle .config/polybar/config :noweb yes :comments none

; Docs: https://github.com/polybar/polybar
;==========================================================

[settings]
screenchange-reload = true

[global/wm]
margin-top = 0
margin-bottom = 0

[colors]
background = #f0232635
background-alt = #576075
foreground = #A6Accd
foreground-alt = #555
primary = #ffb52a
secondary = #e60053
alert = #bd2c40
underline-1 = #c792ea

[bar/panel]
width = 100%
height = <<get-setting(name="polybar/height")>>
offset-x = 0
offset-y = 0
fixed-center = true
enable-ipc = true

background = ${colors.background}
foreground = ${colors.foreground}

line-size = 2
line-color = #f00

border-size = 0
border-color = #00000000

padding-top = 5
padding-left = 1
padding-right = 1

module-margin = 1

font-0 = "Cantarell:size=<<get-setting(name="polybar/font-0-size")>>:weight=bold;2"
font-1 = "Font Awesome:size=<<get-setting(name="polybar/font-1-size")>>;2"
font-2 = "Material Icons:size=<<get-setting(name="polybar/font-2-size")>>;5"
font-3 = "Fira Mono:size=<<get-setting(name="polybar/font-3-size")>>;-3"

;modules-left = exwm exwm-path
;modules-center = spotify
;modules-right = telegram mu4e cpu temperature battery date

modules-left = xworkspaces xwindow
modules-center = date
modules-right = cpu temperature battery pulseaudio xkeyboard


tray-position = right
tray-padding = 2
tray-maxsize = 28

cursor-click = pointer
cursor-scroll = ns-resize

; [module/spotify]
; type = custom/script
; exec = ~/.config/polybar/player-status.sh
; interval = 3

; [module/mu4e]
; type = custom/ipc
; hook-0 = emacsclient -e '(dw/polybar-mail-count 500)' | sed -e 's/^"//' -e 's/"$//'
; initial = 1
; format-underline = ${colors.underline-1}
; click-left = emacsclient -e '(dw/go-to-inbox)'

; [module/telegram]
; type = custom/ipc
; hook-0 = emacsclient -e '(dw/polybar-telegram-chats)' | sed -e 's/^"//' -e 's/"$//'
; format-padding = 3
; initial = 1


[module/pulseaudio]
type = internal/pulseaudio

format-volume-prefix = "VOL "
format-volume-prefix-foreground = ${colors.primary}
format-volume = <label-volume>

label-volume = %percentage%%

label-muted = muted
label-muted-foreground = ${colors.disabled}

[module/xworkspaces]
type = internal/xworkspaces

label-active = %name%
label-active-background = ${colors.background-alt}
label-active-underline= ${colors.primary}
label-active-padding = 1

label-occupied = %name%
label-occupied-padding = 1

label-urgent = %name%
label-urgent-background = ${colors.alert}
label-urgent-padding = 1

label-empty = %name%
label-empty-foreground = ${colors.disabled}
label-empty-padding = 1

[module/xkeyboard]
type = internal/xkeyboard
blacklist-0 = num lock

format-prefix-font = 1
format-prefix-foreground = ${colors.foreground-alt}
format-prefix-underline = ${colors.underline-1}

label-layout = %layout%
label-layout-underline = ${colors.underline-1}

label-indicator-padding = 2
label-indicator-margin = 1
label-indicator-underline = ${colors.underline-1}

[module/cpu]
type = internal/cpu
interval = 2
format = <label> <ramp-coreload>
format-underline = ${colors.underline-1}
click-left = emacsclient -e "(proced)"
label = %percentage:2%%
ramp-coreload-spacing = 0
ramp-coreload-0 = ▁
ramp-coreload-0-foreground = ${colors.foreground-alt}
ramp-coreload-1 = ▂
ramp-coreload-2 = ▃
ramp-coreload-3 = ▄
ramp-coreload-4 = ▅
ramp-coreload-5 = ▆
ramp-coreload-6 = ▇

[module/memory]
type = internal/memory
interval = 2
format-prefix = "M:"
format-prefix-foreground = ${colors.foreground-alt}
format-underline = ${colors.underline-1}
label = %percentage_used%%

[module/date]
type = internal/date
interval = 5

date = "W%U: %a %b %e"
date-alt = "%A %B %d %Y"

time = %l:%M %p
time-alt = %H:%M:%S

format-prefix-foreground = ${colors.foreground-alt}
format-underline = ${colors.underline-1}

label = %date% %time%

[module/battery]
type = internal/battery
battery = BAT0
adapter = ADP1
full-at = 98
time-format = %-l:%M

label-charging = %percentage%% / %time%
format-charging = <animation-charging> <label-charging>
format-charging-underline = ${colors.underline-1}

label-discharging = %percentage%% / %time%
format-discharging = <ramp-capacity> <label-discharging>
format-discharging-underline = ${self.format-charging-underline}

format-full = <ramp-capacity> <label-full>
format-full-underline = ${self.format-charging-underline}

ramp-capacity-0 = 
ramp-capacity-1 = 
ramp-capacity-2 = 
ramp-capacity-3 = 
ramp-capacity-4 = 

animation-charging-0 = 
animation-charging-1 = 
animation-charging-2 = 
animation-charging-3 = 
animation-charging-4 = 
animation-charging-framerate = 750

[module/temperature]
type = internal/temperature
thermal-zone = 0
warn-temperature = 60

format = <label>
format-underline = ${colors.underline-1}
format-warn = <label-warn>
format-warn-underline = ${self.format-underline}

label = %temperature-c%
label-warn = %temperature-c%!
label-warn-foreground = ${colors.secondary}

#+end_src

*.config/polybar/player-status.sh:*

#+begin_src sh :tangle .config/polybar/player-status.sh :shebang #!/bin/sh

status="$(playerctl -p spotify status 2>&1)"
if [ "$status" != "No players found" ]
then
  artist="$(playerctl -p spotify metadata artist)"
  if [ "$artist" != "" ]
  then
    echo " $(playerctl -p spotify metadata artist) - $(playerctl -p spotify metadata title)"
  else
    # Clear any string that was previously displayed
    echo ""
  fi
else
  # Clear any string that was previously displayed
  echo ""
fi

#+end_src

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"polybar"

#+end_src

*.config/dunst/dunstrc:*

#+begin_src conf :tangle .config/dunst/dunstrc :noweb yes :comments none

[global]
    ### Display ###
    monitor = 0

    # The geometry of the window:
    #   [{width}]x{height}[+/-{x}+/-{y}]
    geometry = "500x10-10+50"

    # Show how many messages are currently hidden (because of geometry).
    indicate_hidden = yes

    # Shrink window if it's smaller than the width.  Will be ignored if
    # width is 0.
    shrink = no

    # The transparency of the window.  Range: [0; 100].
    transparency = 10

    # The height of the entire notification.  If the height is smaller
    # than the font height and padding combined, it will be raised
    # to the font height and padding.
    notification_height = 0

    # Draw a line of "separator_height" pixel height between two
    # notifications.
    # Set to 0 to disable.
    separator_height = 1
    separator_color = frame

    # Padding between text and separator.
    padding = 8

    # Horizontal padding.
    horizontal_padding = 8

    # Defines width in pixels of frame around the notification window.
    # Set to 0 to disable.
    frame_width = 2

    # Defines color of the frame around the notification window.
    frame_color = "#89AAEB"

    # Sort messages by urgency.
    sort = yes

    # Don't remove messages, if the user is idle (no mouse or keyboard input)
    # for longer than idle_threshold seconds.
    idle_threshold = 120

    ### Text ###

    font = Cantarell <<get-setting(name="dunst/font-size")>>

    # The spacing between lines.  If the height is smaller than the
    # font height, it will get raised to the font height.
    line_height = 0
    markup = full

    # The format of the message.  Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    #   %n  progress value if set without any extra characters
    #   %%  Literal %
    # Markup is allowed
    format = "<b>%s</b>\n%b"

    # Alignment of message text.
    # Possible values are "left", "center" and "right".
    alignment = left

    # Show age of message if message is older than show_age_threshold
    # seconds.
    # Set to -1 to disable.
    show_age_threshold = 60

    # Split notifications into multiple lines if they don't fit into
    # geometry.
    word_wrap = yes

    # When word_wrap is set to no, specify where to make an ellipsis in long lines.
    # Possible values are "start", "middle" and "end".
    ellipsize = middle

    # Ignore newlines '\n' in notifications.
    ignore_newline = no

    # Stack together notifications with the same content
    stack_duplicates = true

    # Hide the count of stacked notifications with the same content
    hide_duplicate_count = false

    # Display indicators for URLs (U) and actions (A).
    show_indicators = yes

    ### Icons ###

    # Align icons left/right/off
    icon_position = left

    # Scale larger icons down to this size, set to 0 to disable
    max_icon_size = <<get-setting(name="dunst/max-icon-size")>>

    # Paths to default icons.
    icon_path = /home/dc/.guix-extra-profiles/desktop/desktop/share/icons/gnome/256x256/status/:/home/dc/.guix-extra-profiles/desktop/desktop/share/icons/gnome/256x256/devices/:/home/dc/.guix-extra-profiles/desktop/desktop/share/icons/gnome/256x256/emblems/

    ### History ###

    # Should a notification popped up from history be sticky or timeout
    # as if it would normally do.
    sticky_history = no

    # Maximum amount of notifications kept in history
    history_length = 20

    ### Misc/Advanced ###

    # Browser for opening urls in context menu.
    browser = nyxt

    # Always run rule-defined scripts, even if the notification is suppressed
    always_run_script = true

    # Define the title of the windows spawned by dunst
    title = Dunst

    # Define the class of the windows spawned by dunst
    class = Dunst

    startup_notification = false
    verbosity = mesg

    # Define the corner radius of the notification window
    # in pixel size. If the radius is 0, you have no rounded
    # corners.
    # The radius will be automatically lowered if it exceeds half of the
    # notification height to avoid clipping text and/or icons.
    corner_radius = 4

    mouse_left_click = close_current
    mouse_middle_click = do_action
    mouse_right_click = close_all

# Experimental features that may or may not work correctly. Do not expect them
# to have a consistent behaviour across releases.
[experimental]
    # Calculate the dpi to use on a per-monitor basis.
    # If this setting is enabled the Xft.dpi value will be ignored and instead
    # dunst will attempt to calculate an appropriate dpi value for each monitor
    # using the resolution and physical size. This might be useful in setups
    # where there are multiple screens with very different dpi values.
    per_monitor_dpi = false

[shortcuts]

    # Shortcuts are specified as [modifier+][modifier+]...key
    # Available modifiers are "ctrl", "mod1" (the alt-key), "mod2",
    # "mod3" and "mod4" (windows-key).
    # Xev might be helpful to find names for keys.

    # Close notification.
    #close = ctrl+space

    # Close all notifications.
    #close_all = ctrl+shift+space

    # Redisplay last message(s).
    # On the US keyboard layout "grave" is normally above TAB and left
    # of "1". Make sure this key actually exists on your keyboard layout,
    # e.g. check output of 'xmodmap -pke'
    history = ctrl+grave

    # Context menu.
    context = ctrl+shift+period

[urgency_low]
    # IMPORTANT: colors have to be defined in quotation marks.
    # Otherwise the "#" and following would be interpreted as a comment.
    background = "#222222"
    foreground = "#888888"
    timeout = 10
    # Icon for notifications with low urgency, uncomment to enable
    #icon = /path/to/icon

[urgency_normal]
    background = "#1c1f26"
    foreground = "#ffffff"
    timeout = 10
    # Icon for notifications with normal urgency, uncomment to enable
    #icon = /path/to/icon

[urgency_critical]
    background = "#900000"
    foreground = "#ffffff"
    frame_color = "#ff0000"
    timeout = 0
    # Icon for notifications with critical urgency, uncomment to enable
    #icon = /path/to/icon

#+end_src

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"dunst"
"libnotify"  ; For notify-send

#+end_src

* Launchers

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

#+end_src

* Display Management

**** TODO update or remove xrandr scripts

#+begin_src sh :tangle .bin/update-screens :shebang #!/bin/sh

case $(hostname) in

    zerocool)
        xrandr --output VIRTUAL1 --off --output eDP1 --mode 2560x1440 --pos 3840x416 --rotate normal --output DP1 --off --output HDMI1 --off --output DP1-3 --off --output DP1-2 --off --output DP1-1 --primary --mode 3840x2160 --pos 0x0 --rotate normal --output DP2 --off
        ;;

    acidburn)
        xrandr --output eDP-1 --mode 2160x1350 --pos 2560x45 --rotate normal --output HDMI-1 --off --output DP-1 --off --output DP-2 --off --output DP-3 --off --output DP-4 --off --output DP-3-1 --off --output DP-3-2 --off --output DP-3-3 --off --output DP-3-1 --off --output DP-3-2 --off --output DP-3-3 --primary --mode 2560x1440 --pos 0x0 --rotate normal
        ;;

    davinci)
        # Temporary: this is for docking my laptop at home with HDMI!
        #xrandr --output HDMI-2 --mode 3840x2160 --pos 0x0 --scale 0.6x0.6 --primary --rotate normal --output HDMI-1 --off --output DP-1 --off --output eDP-1 --mode 1920x1080 --pos 2304x216 --rotate normal --output DP-2 --off
        xrandr --output eDP-1 --mode 1920x1080 --pos 2560x360 --rotate normal --output DP-1-2 --primary --mode 2560x1440 --pos 0x0 --rotate normal --output HDMI-2 --off --output HDMI-1 --off --output DP-1 --off --output DP-1-3 --off --output DP-2 --off --output DP-1-1 --off
        ;;

    phantom)
        # On a new install, run this command first to ensure HDMI works!
        # xrandr --setprovideroutputsource nouveau modesetting
        xrandr --output eDP-1 --primary --mode 3840x2160 --pos 0x0 --rotate normal --output eDP-1-2 --off --output HDMI-1-1 --mode 3840x2160 --pos 3840x0 --rotate normal --output DP-1-1 --off --output DP-1-2 --off
        ;;

esac

#+end_src


* XDG

** Desktop Entries
** Restrict Autostart entries

**** TODO review =.config/autostart/*=

** MIME Handlers

*.config/mimeapps.list*

#+begin_src conf :tangle .config/mimeapps.list
[Default Applications]
text/html=qutebrowser.desktop
x-scheme-handler/http=qutebrowser.desktop
x-scheme-handler/https=qutebrowser.desktop
x-scheme-handler/about=qutebrowser.desktop
x-scheme-handler/unknown=qutebrowser.desktop
#+end_src

* Applications

** Browsers

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"icecat"
"ungoogled-chromium"
"qutebrowser"
"nyxt"

#+end_src

*** Nyxt

*** Qutebrowser

#+begin_src python :tangle .config/qutebrowser/config.py
# Open every tab as a new window, Vimb style
c.tabs.tabs_are_windows = True
c.tabs.show = "multiple"
c.tabs.last_close = "close"

c.auto_save.session = True
c.scrolling.smooth = True
c.session.lazy_restore = True
c.content.autoplay = False

# Scale pages and UI better for hidpi
#c.zoom.default = "<<get-setting(name="qutebrowser/default-zoom")>>%"
c.fonts.hints = "bold 20pt monospace"

# Better default fonts
c.fonts.web.family.standard = "NotoSans"
c.fonts.web.family.serif = "NotoSerif"
c.fonts.web.family.sans_serif = "NotoSans"
c.fonts.web.family.fixed = "NotoSansMono"
c.fonts.statusbar = "18pt NotoSerif"
#c.fonts.web.family.standard = "Bitstream Vera Sans"
#c.fonts.web.family.serif = "Bitstream Vera Serif"
#c.fonts.web.family.sans_serif = "Bitstream Vera Sans"
#c.fonts.web.family.fixed = "Fira Mono"
#c.fonts.statusbar = "18pt Cantarell"

# Use dark mode where possible
c.colors.webpage.darkmode.enabled = True
c.colors.webpage.darkmode.policy.images = "never"
c.colors.webpage.bg = "black"

# Automatically turn on insert mode when a loaded page focuses a text field
c.input.insert_mode.auto_load = True

# Edit fields in Emacs with Ctrl+E
c.editor.command = ["emacsclient", "+{line}:{column}", "{file}"]

# Make Ctrl+g quit everything like in Emacs
config.bind('<Ctrl-g>', 'leave-mode', mode='insert')
config.bind('<Ctrl-g>', 'leave-mode', mode='command')
config.bind('<Ctrl-g>', 'leave-mode', mode='prompt')
config.bind('<Ctrl-g>', 'leave-mode', mode='hint')
config.bind('v', 'spawn ~/.dotfiles/bin/umpv {url}')
config.bind('V', 'hint links spawn ~/.dotfiles/bin/umpv {hint-url}')

# Tweak some keybindings
config.unbind('d') # Don't close window on lower-case 'd'
config.bind('yy', 'yank')

# Vim-style movement keys in command mode
config.bind('<Ctrl-j>', 'completion-item-focus --history next', mode='command')
config.bind('<Ctrl-k>', 'completion-item-focus --history prev', mode='command')

# More binding hints here: https://gitlab.com/Kaligule/qutebrowser-emacs-config/blob/master/config.py

config.bind('<Ctrl-alt-t', 'config-cycle tabs.tabs_are_windows')

# Load the autoconfig file (quteconfig.py)
config.load_autoconfig()
#+end_src


#+begin_src conf :tangle .config/qutebrowser/quickmarks
ddg https://duckduckgo.com/?q $0
gh https://github.com/$0
ghs https://github.com/search?q $0
ghn https://github.com/notifications
oai3 https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md
oai3 https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md
dwdot https://github.com/daviwil/dotfiles
#+end_src

**** TODO find reference for the main =duckduckgo= !bang search urls

** File Managers

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"thunar"

#+end_src


** Terminals

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"alacritty"

#+end_src

#+begin_src yaml :tangle .config/alacritty/alacritty.yml
env:
  TERM: xterm-256color

shell:
  program:  /bin/sh
#  args:
#    - --login

window:
  dimensions:
    columns: 100
    lines: 30

  dynamic_padding: true
  decorations: full
  dynamic_title: true
  title: Alacritty

  class:
    instance: Alacritty
    general: Alacritty

  gtk_theme_variant: dark

mouse:
  hide_when_typing: true
  #url: #url launcher

#mouse_bindings:

key_bindings:
  - { key: V,        mods: Control|Shift, action: Paste            }
  - { key: C,        mods: Control|Shift, action: Copy             }
  - { key: Insert,   mods: Shift,         action: PasteSelection   }
  - { key: Key0,     mods: Control,       action: ResetFontSize    }
  - { key: Equals,   mods: Control,       action: IncreaseFontSize }
  - { key: Plus,     mods: Control,       action: IncreaseFontSize }
  - { key: Minus,    mods: Control,       action: DecreaseFontSize }
  - { key: Minus,    mods: Control,       action: DecreaseFontSize }

cursor:
  style: Block
  unfocused_hollow: true

scrolling:
  history: 10000
  multiplier: 3

font:
  size: 12
  normal:
    family: "DejaVuSansMono"
    #family: "JuliaMono"
    #family: "JuliaMono-Regular"
  bold:
    family: "DejaVuSansMono"
    #family: "JuliaMono"
    #family: "JuliaMono-Bold"
  italic:
    family: "DejaVuSansMono"
    #family: "JuliaMono"
    #family: "JuliaMono-Italic"
  bold_italic:
    family: "DejaVuSansMono"
    #family: "JuliaMono"
    #family: "JuliaMono-BoldItalic"
    #size: 12

background_opacity: 0.80
draw_bold_text_with_bright_colors: true
save_to_clipboard: true
live_config_reload: true

# Custom colorscheme fitting Garuda Sweetified theme
colors:
  primary:
    background: '0x0a1124'
    foreground: '0xeec49a'
  cursor:
    text:       '0x0a1124'
    cursor:     '0xeec49a'
  normal:
    black:      '0x0a1124'
    red:        '0x5F4149'
    green:      '0xEB3247'
    yellow:     '0xBC4349'
    blue:       '0xF35645'
    magenta:    '0xF6A73B'
    cyan:       '0xFAD32F'
    white:      '0xeec49a'
  bright:
    black:      '0xa6896b'
    red:        '0x5F4149'
    green:      '0xEB3247'
    yellow:     '0xBC4349'
    blue:       '0xF35645'
    magenta:    '0xF6A73B'
    cyan:       '0xFAD32F'
    white:      '0xeec49a'
#+end_src

** Password Management

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"pwsafe"

#+end_src
** Audio Device Control

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"alsa-utils"
"pavucontrol"

#+end_src

** Media Players

*** mpv

[[https://mpv.io/][mpv]] is a simple yet powerful video player.  Paired with [[http://ytdl-org.github.io/youtube-dl/][youtube-dl]] it can even stream YouTube videos.  [[https://github.com/hoyon/mpv-mpris][mpv-mpris]] allows playback control via [[https://github.com/altdesktop/playerctl][playerctl]].

*.config/mpv/mpv.conf*

#+begin_src conf :tangle .config/mpv/mpv.conf :noweb yes :comments none

# Configure playback quality
vo=gpu
hwdec=vaapi
profile=gpu-hq
scale=ewa_lanczossharp
cscale=ewa_lanczossharp

# Start the window in the upper right screen corner
geometry=22%-30+20

# Save video position on quit
save-position-on-quit

# Enable control by MPRIS
script=~/.guix-extra-profiles/desktop/desktop/lib/mpris.so

# Limit the resolution of YouTube videos
ytdl=yes
ytdl-format=bestvideo[height<=?720]+bestaudio/best

# When playing audio files, display the album art
audio-display=attachment

# Keep the player open after the file finishes
keep-open

#+end_src

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"mpv"
"mpv-mpris"
"youtube-dl"
"playerctl"

#+end_src

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
"mpv"
"mpv-mpris"
"youtube-dl"
"playerctl"
#+end_src

*** Codecs and Drivers

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
"gstreamer"
"gst-plugins-base"
"gst-plugins-good"
"gst-plugins-bad"
;; "gst-plugins-ugly"
"gst-libav"
"intel-vaapi-driver"
"libva-utils"
#+end_src

** Image Viewers and Editors


*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""
"feh"
"scrot"
#+end_src

** Games

*.config/guix/manifests/games.scm*

#+begin_src scheme :tangle .config/guix/manifests/games.scm :noweb yes
(specifications->manifest
 '("aisleriot"
   "gnome-mahjongg"))
#+end_src

** Document Readers

#+begin_src conf :tangle .config/zathura/zathurarc

# Automatically adjust the document to full width
set adjust-open width

# Set the title to the filename
set window-title-basename true

# Larger scroll steps with j/k
set scroll-step 150

# Adjusting the document
map [normal] E adjust_window best-fit
map [fullscreen] E adjust_window best-fit
map [normal] e adjust_window width
map [fullscreen] e adjust_window width

# Toggling the inverted colours
map <C-i> recolor
map <C-g> abort

#+end_src

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"zathura"
"zathura-pdf-mupdf"

#+end_src

** Syncthing

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"syncthing"
"syncthing-gtk"

#+end_src

** Flatpak

*Applications to Install*

#+begin_example sh

flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
flatpak remote-add --user --if-not-exists flathub-beta https://flathub.org/beta-repo/flathub-beta.flatpakrepo
flatpak install --user flathub com.discordapp.Discord
flatpak install --user flathub-beta com.obsproject.Studio

flatpak install --user flathub com.valvesoftware.Steam
flatpak install --user flathub com.valvesoftware.Steam.CompatibilityTool.Proton

#+end_example

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"flatpak"

#+end_src


** Printing

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"system-config-printer"

#+end_src

** Desktop Tools

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"compton"
;;"redshift"
"gucharmap"
"fontmanager"
"brightnessctl"

#+end_src

+ compton :: an alternative compositor for X
  - incompatible in Wayland, since it doesn't offer modular compositors
+ redshift :: control color temperature according to surroundings.
  - requires =libxcb= X11 client lib
  - for wayland: =gammastep= or =wlsunset=
+ gucharmap :: unicode character map (GTK)
+ fontmanager :: provides GTK tools to aid configuration of fonts
+ brightnessctl :: lightweight brightness control tool

*** XDG

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"xdg-utils"          ;; for xdg-open, etc
"xdg-dbus-proxy"     ;; for Flatpak
"gtk+:bin"           ;; for gtk-launch
"glib:bin"           ;; for gio-launch-desktop
"shared-mime-info"   ;; for mimes

#+end_src

** System Tools

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"openssh"
"zip"
"unzip"
"trash-cli"

;; for org-roam
"sqlite"

#+end_src

** Xorg Tools

*Guix Packages*

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"xev"
"xset"
"xrdb"
"xhost"
"xmodmap"
"setxkbmap"
"xrandr"
"arandr"
"xss-lock"
"libinput"
"xinput"

"xkbcomp"
"autorandr"

#+end_src

** Misc Tools

#+begin_src scheme :noweb-ref packages :noweb-sep ""

"graphviz"
"plantuml"

"fd"
"ripgrep"

#+end_src


* Desktop Profiles

*.config/guix/manifests/desktop.scm:*

#+begin_src scheme :tangle .config/guix/manifests/desktop.scm :noweb yes :comments none

(specifications->manifest
 '(
   <<packages>>
))

#+end_src


*.config/guix/manifests/i3.scm:*

#+begin_src scheme :tangle .config/guix/manifests/i3.scm :noweb yes :comments none

(specifications->manifest
 '(
   <<i3packages>>
))

#+end_src

* Notes

** Bluetooth Setup

If you need to manually connect to Bluetooth audio devices using =bluetoothctl=,
as DW currently does in Guix, you'll need to enter these commands at the
=bluetoothctl= prompt:

#+begin_src shell

  system-alias "my-hostname" # To configure your laptop's device name
  default-agent
  power on
  scan on
  # Wait for your device to appear
  pair 04:52:C7:5E:5C:A8
  trust 04:52:C7:5E:5C:A8 # To enable auto-connect
  connect 04:52:C7:5E:5C:A8

#+end_src
